{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/GitHub/react-game/src/components/playerLeaderboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadLeaderboards } from '../actions/useraction';\nimport PlayerLeaderboardView from './playerLeaderboardView';\n\nclass PlayerLeaderboard extends React.Component {\n  componentDidMount() {\n    this.props.loadLeaderboards();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        backgroundColor: \"#24bfb8\",\n        border: \"#24bfb8\"\n      },\n      text: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"Leaderboards\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, this.props.leaderboards != null ? this.props.leaderboards.map(lbname => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(PlayerLeaderboardView, {\n        leaderboardName: lbname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 41\n        }\n      }));\n    }) : \"\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leaderboards: leaderboards\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadLeaderboards\n})(PlayerLeaderboard);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/playerLeaderboard.js"],"names":["React","connect","loadLeaderboards","PlayerLeaderboardView","PlayerLeaderboard","Component","componentDidMount","props","render","backgroundColor","border","leaderboards","map","lbname","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,gBAAX;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,SAAjB;AAA2BC,QAAAA,MAAM,EAAC;AAAlC,OAAb;AAA2D,MAAA,IAAI,EAAC,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKH,KAAL,CAAWI,YAAX,IAA2B,IAA5B,GACI,KAAKJ,KAAL,CAAWI,YAAX,CAAwBC,GAAxB,CAA6BC,MAAD,IAAU;AAClC,0BAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK,oBAAC,qBAAD;AAAuB,QAAA,eAAe,EAAEA,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAAP;AACP,KAFG,CADJ,GAGK,EALT,CADA,CAJJ,CADG,CAAP;AAiBH;;AAxB0C;;AA2B/C,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAO;AACHJ,IAAAA,YAAY,EAAGA;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACa,eAAD,EAAiB;AAACZ,EAAAA;AAAD,CAAjB,CAAP,CAA4CE,iBAA5C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadLeaderboards} from '../actions/useraction'\nimport PlayerLeaderboardView from './playerLeaderboardView'\n\nclass PlayerLeaderboard extends React.Component{\n\n    componentDidMount(){\n        this.props.loadLeaderboards()\n    }\n\n    render(){\n        return <div>\n            <Card style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} text=\"white\">\n                <Card.Header>\n                    Leaderboards\n                </Card.Header>\n                <Card.Body>\n                <Row>\n                {\n                    (this.props.leaderboards != null) ? \n                        this.props.leaderboards.map((lbname)=>{\n                            return <Col><PlayerLeaderboardView leaderboardName={lbname}/></Col>\n                    }) : \"\"\n                }\n                </Row>\n                </Card.Body>\n            </Card>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        leaderboards : leaderboards\n    }\n}\n\nexport default connect(mapStateToProps,{loadLeaderboards})(PlayerLeaderboard)"]},"metadata":{},"sourceType":"module"}