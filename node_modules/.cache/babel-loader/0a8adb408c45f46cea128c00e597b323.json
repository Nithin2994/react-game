{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/loginFormComponent.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Button, FormText } from 'react-bootstrap';\n\nclass LoginFormComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.onLoginClick(formValues.username, formValues.password);\n    };\n  }\n\n  renderInput({\n    input,\n    lable,\n    meta,\n    type\n  }) {\n    //return <input onChange={formProps.input.onChange} value={formProps.input.value} type=\"text\"/>\n    console.log(meta);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, lable), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      autoComplete: \"off\",\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 51\n      }\n    }, meta.error) : \"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      component: this.renderInput,\n      lable: \"Username\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: this.renderInput,\n      lable: \"Password\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Login\")));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"Enter username\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"Enter password\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'FormCreate',\n  validate\n})(LoginFormComponent);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/loginFormComponent.js"],"names":["React","Field","reduxForm","Button","FormText","LoginFormComponent","Component","onSubmit","formValues","props","onLoginClick","username","password","renderInput","input","lable","meta","type","console","log","touched","error","color","render","handleSubmit","validate","errors","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAASC,MAAT,EAAgBC,QAAhB,QAAgC,iBAAhC;;AAEA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAgD;AAAA;AAAA;;AAAA,SAiB5CC,QAjB4C,GAiBhCC,UAAD,IAAgB;AACvB,WAAKC,KAAL,CAAWC,YAAX,CAAwBF,UAAU,CAACG,QAAnC,EAA6CH,UAAU,CAACI,QAAxD;AACH,KAnB2C;AAAA;;AAE5CC,EAAAA,WAAW,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,GAAD,EAA4B;AACnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAR,CADJ,eAEI,+CAAWD,KAAX;AAAkB,MAAA,YAAY,EAAC,KAA/B;AAAqC,MAAA,IAAI,EAAEG,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAISD,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAArB,gBAA6B;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BN,IAAI,CAACK,KAAjC,CAA7B,GAA6E,EAJtF,CADJ;AAUH;;AAMDE,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAM,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWe,YAAX,CAAwB,KAAKjB,QAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAU,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAE,KAAKM,WAAvC;AAAoD,MAAA,KAAK,EAAC,UAA1D;AAAqE,MAAA,IAAI,EAAC,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,CADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAE,KAAKA,WAAvC;AAAoD,MAAA,KAAK,EAAC,UAA1D;AAAqE,MAAA,IAAI,EAAC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,CADG,CAAP;AAQH;;AA9B2C;;AAiChD,MAAMY,QAAQ,GAAGjB,UAAU,IAAG;AAC1B,QAAMkB,MAAM,GAAC,EAAb;;AACA,MAAG,CAAClB,UAAU,CAACG,QAAf,EAAwB;AACpBe,IAAAA,MAAM,CAACf,QAAP,GAAkB,gBAAlB;AACH;;AACD,MAAG,CAACH,UAAU,CAACI,QAAf,EAAwB;AACpBc,IAAAA,MAAM,CAACd,QAAP,GAAkB,gBAAlB;AACH;;AACD,SAAOc,MAAP;AACH,CATD;;AAWA,eAAexB,SAAS,CAAC;AACrByB,EAAAA,IAAI,EAAG,YADc;AAErBF,EAAAA;AAFqB,CAAD,CAAT,CAGZpB,kBAHY,CAAf","sourcesContent":["import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport { Button,FormText } from 'react-bootstrap';\n\nclass LoginFormComponent extends React.Component{\n\n    renderInput({input, lable, meta, type}){\n        //return <input onChange={formProps.input.onChange} value={formProps.input.value} type=\"text\"/>\n        console.log(meta)\n        return (\n            <div>\n                <label>{lable}</label>\n                <input {...input} autoComplete=\"off\" type={type}/>\n                {\n                     meta.touched && meta.error ? <div style={{color:\"red\"}}>{meta.error}</div> : \"\"\n                }\n            </div>\n        \n        )\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onLoginClick(formValues.username, formValues.password)\n    }\n\n    render(){\n        return <div>\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n            <FormText><Field name=\"username\" component={this.renderInput} lable=\"Username\" type=\"text\"/></FormText>\n            <Field name=\"password\" component={this.renderInput} lable=\"Password\" type=\"password\"/>\n            <Button variant=\"primary\" type=\"submit\">Login</Button>\n            </form>\n            \n        </div>\n    }\n}\n\nconst validate = formValues =>{\n    const errors={}\n    if(!formValues.username){\n        errors.username = \"Enter username\" \n    }\n    if(!formValues.password){\n        errors.password = \"Enter password\" \n    }\n    return errors;\n}\n\nexport default reduxForm({\n    form : 'FormCreate',\n    validate\n})(LoginFormComponent);\n\n"]},"metadata":{},"sourceType":"module"}