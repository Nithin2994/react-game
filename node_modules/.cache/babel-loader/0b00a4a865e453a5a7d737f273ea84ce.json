{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{loadCurrencies,loadBalances}from'../actions/useraction';import gameserver from'../apis/gameserver';import TransactionForm from'./transactionFormComponent';var Transaction=/*#__PURE__*/function(_React$Component){_inherits(Transaction,_React$Component);var _super=_createSuper(Transaction);function Transaction(){var _this;_classCallCheck(this,Transaction);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={status:\"\"};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(type,currency,amount){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(type!=\"NA\"&&currency!=\"NA\")){_context.next=8;break;}_context.next=3;return gameserver.post(\"/wallet/\"+type,{playerName:_this.props.username,amount:parseInt(amount),currency:currency},{headers:{token:_this.props.token}});case 3:response=_context.sent;_this.setState({status:response.data.status});_this.props.loadBalances(_this.props.username,_this.props.token);_context.next=9;break;case 8:alert(\"Select Currency and Type\");case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2,_x3){return _ref.apply(this,arguments);};}();return _this;}_createClass(Transaction,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.loadCurrencies();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TransactionForm,{currencies:this.props.currencies,transaction:this.handleSubmit}),this.state.status);}}]);return Transaction;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{currencies:state.currencies,username:state.user.username,token:state.user.token};};export default connect(mapStateToProps,{loadCurrencies:loadCurrencies,loadBalances:loadBalances})(Transaction);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/transaction.js"],"names":["React","connect","loadCurrencies","loadBalances","gameserver","TransactionForm","Transaction","state","status","handleSubmit","type","currency","amount","post","playerName","props","username","parseInt","headers","token","response","setState","data","alert","currencies","Component","mapStateToProps","user"],"mappings":"i9BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,cAAR,CAAwBC,YAAxB,KAA2C,uBAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,C,GAEMC,CAAAA,W,2VAEFC,K,CAAQ,CACJC,MAAM,CAAG,EADL,C,OAQRC,Y,0FAAe,iBAAOC,IAAP,CAAYC,QAAZ,CAAqBC,MAArB,oIACRF,IAAI,EAAI,IAAR,EAAgBC,QAAQ,EAAI,IADpB,gDAEiBP,CAAAA,UAAU,CAACS,IAAX,CAAgB,WAAWH,IAA3B,CAAgC,CACpDI,UAAU,CAAE,MAAKC,KAAL,CAAWC,QAD6B,CAEpDJ,MAAM,CAAEK,QAAQ,CAACL,MAAD,CAFoC,CAGpDD,QAAQ,CAAEA,QAH0C,CAAhC,CAItB,CACEO,OAAO,CAAC,CACJC,KAAK,CAAG,MAAKJ,KAAL,CAAWI,KADf,CADV,CAJsB,CAFjB,QAEDC,QAFC,eAYP,MAAKC,QAAL,CAAc,CACVb,MAAM,CAAGY,QAAQ,CAACE,IAAT,CAAcd,MADb,CAAd,EAIA,MAAKO,KAAL,CAAWZ,YAAX,CAAwB,MAAKY,KAAL,CAAWC,QAAnC,CAA4C,MAAKD,KAAL,CAAWI,KAAvD,EAhBO,6BAkBPI,KAAK,CAAC,0BAAD,CAAL,CAlBO,sD,0KAJI,CACf,KAAKR,KAAL,CAAWb,cAAX,GACH,C,uCAyBO,CACJ,mBAAO,4CACH,oBAAC,eAAD,EAAiB,UAAU,CAAE,KAAKa,KAAL,CAAWS,UAAxC,CAAoD,WAAW,CAAE,KAAKf,YAAtE,EADG,CAEF,KAAKF,KAAL,CAAWC,MAFT,CAAP,CAIH,C,yBAtCqBR,KAAK,CAACyB,S,EAyChC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACnB,KAAD,CAAW,CAC/B,MAAO,CACHiB,UAAU,CAAGjB,KAAK,CAACiB,UADhB,CAEHR,QAAQ,CAAGT,KAAK,CAACoB,IAAN,CAAWX,QAFnB,CAGHG,KAAK,CAAGZ,KAAK,CAACoB,IAAN,CAAWR,KAHhB,CAAP,CAKH,CAND,CAQA,cAAelB,CAAAA,OAAO,CAACyB,eAAD,CAAiB,CAACxB,cAAc,CAAdA,cAAD,CAAiBC,YAAY,CAAZA,YAAjB,CAAjB,CAAP,CAAwDG,WAAxD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadCurrencies, loadBalances} from '../actions/useraction'\nimport gameserver from '../apis/gameserver'\nimport TransactionForm from './transactionFormComponent';\n\nclass Transaction extends React.Component{\n\n    state = {\n        status : \"\"\n    }\n\n    componentDidMount(){\n        this.props.loadCurrencies()\n    }\n\n    handleSubmit = async (type,currency,amount) => {\n        if(type != \"NA\" && currency != \"NA\"){\n            const response =  await gameserver.post(\"/wallet/\"+type,{\n                playerName: this.props.username,\n                amount: parseInt(amount),\n                currency: currency\n            },{\n                headers:{\n                    token : this.props.token\n                }\n            })\n    \n            this.setState({\n                status : response.data.status\n            })\n    \n            this.props.loadBalances(this.props.username,this.props.token)\n        }else{\n            alert(\"Select Currency and Type\")\n        }\n        \n    }\n\n    render(){\n        return <div>\n            <TransactionForm currencies={this.props.currencies} transaction={this.handleSubmit}/> \n            {this.state.status}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currencies : state.currencies,\n        username : state.user.username,\n        token : state.user.token\n    }\n}\n\nexport default connect(mapStateToProps,{loadCurrencies, loadBalances})(Transaction)"]},"metadata":{},"sourceType":"module"}