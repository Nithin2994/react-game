{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{updatePvpScore,endGame,updateScoresInState}from'../actions/useraction';import histroy from'../history';import{Button,Table,Row,Col,Card,Container}from'react-bootstrap';import Cell from'./cell';import gameserver from'../apis/gameserver';import _ from'lodash';var PVPTikTokToeGame=/*#__PURE__*/function(_React$Component){_inherits(PVPTikTokToeGame,_React$Component);var _super=_createSuper(PVPTikTokToeGame);function PVPTikTokToeGame(){var _this;_classCallCheck(this,PVPTikTokToeGame);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={seconds:60,selectedData:{},myTurn:true};_this.updateCache=function(e){var msg=JSON.parse(e.data);console.log(\"Received \",msg);_this.updateGridVals(msg);if(!_this.state.winner){_this.setState({myTurn:true});}};_this.updateGridVals=function(msg){var updatedValues=_objectSpread({},_this.state.selectedData);updatedValues[msg.id]=msg.player;_this.setState({selectedData:updatedValues});if(_this.state.selectedData[1]==_this.state.selectedData[2]){if(_this.state.selectedData[2]==_this.state.selectedData[3]){if(_this.state.selectedData[1]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[1]});}}}if(_this.state.selectedData[4]==_this.state.selectedData[5]){if(_this.state.selectedData[5]==_this.state.selectedData[6]){if(_this.state.selectedData[4]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[4]});}}}if(_this.state.selectedData[7]==_this.state.selectedData[8]){if(_this.state.selectedData[8]==_this.state.selectedData[9]){if(_this.state.selectedData[8]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[8]});}}}if(_this.state.selectedData[1]==_this.state.selectedData[5]){if(_this.state.selectedData[5]==_this.state.selectedData[9]){if(_this.state.selectedData[5]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[5]});}}}if(_this.state.selectedData[3]==_this.state.selectedData[5]){if(_this.state.selectedData[5]==_this.state.selectedData[7]){if(_this.state.selectedData[5]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[5]});}}}if(_this.state.selectedData[2]==_this.state.selectedData[5]){if(_this.state.selectedData[5]==_this.state.selectedData[8]){if(_this.state.selectedData[5]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[5]});}}}if(_this.state.selectedData[1]==_this.state.selectedData[4]){if(_this.state.selectedData[4]==_this.state.selectedData[7]){if(_this.state.selectedData[4]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[4]});}}}if(_this.state.selectedData[3]==_this.state.selectedData[6]){if(_this.state.selectedData[6]==_this.state.selectedData[9]){if(_this.state.selectedData[6]){_this.setState({winner:\"Winner is \"+_this.state.selectedData[6]});}}}var count=0;_.forEach(_this.state.selectedData,function(value,key){count++;});if(count==9){_this.setState({winner:\"Match is Draw\"});}if(_this.state.winner){_this.endGameHandler();_this.setState({myTurn:false});}};_this.endGameHandler=function(){_this.props.endGame();};_this.selectCellHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(_this.state.myTurn==true)){_context.next=7;break;}console.log(\"Selected : \",id);_context.next=4;return gameserver.post(\"/matchmaking/tiktoctoe\",{player:_this.props.username,id:id});case 4:response=_context.sent;if(response){_this.updateGridVals({player:_this.props.username,id:id});}_this.setState({myTurn:false});case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.renderGameGrid=function(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3,lg:3}),[1,2,3].map(function(id){return/*#__PURE__*/React.createElement(Cell,{key:id,style:{width:\"5%\"},id:id,selected:_this.state.selectedData[id],selectCell:_this.selectCellHandler,currentPlayer:_this.props.username});}),/*#__PURE__*/React.createElement(Col,{md:3,lg:3})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3,lg:3}),[4,5,6].map(function(id){return/*#__PURE__*/React.createElement(Cell,{key:id,style:{width:\"5%\"},id:id,selected:_this.state.selectedData[id],selectCell:_this.selectCellHandler,currentPlayer:_this.props.username});}),/*#__PURE__*/React.createElement(Col,{md:3,lg:3})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3,lg:3}),[7,8,9].map(function(id){return/*#__PURE__*/React.createElement(Cell,{key:id,style:{width:\"5%\"},id:id,selected:_this.state.selectedData[id],selectCell:_this.selectCellHandler,currentPlayer:_this.props.username});}),/*#__PURE__*/React.createElement(Col,{md:3,lg:3}))));};_this.renderWinner=function(){return/*#__PURE__*/React.createElement(\"h2\",null,_this.state.winner,\" \");};_this.render=function(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{paddingBottom:\"1%\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{block:true,style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},onClick:function onClick(){histroy.push(\"/home\");}},\"back\")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{block:true,style:{backgroundColor:\"#d6b84d\",border:\"#d6b84d\"},onClick:function onClick(){histroy.push(\"/pvp/tictactoe\");}},\"New-Match\"))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Tic Tac Toe\"),/*#__PURE__*/React.createElement(\"h3\",null,_this.state.winner?_this.state.winner:_this.state.myTurn?\"Your Turn\":\"Opponent Turn\")),/*#__PURE__*/React.createElement(Card.Body,null,_this.renderGameGrid())));};return _this;}_createClass(PVPTikTokToeGame,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.ws=new WebSocket('ws://localhost:8081/ws');this.ws.onopen=function(){return _this2.ws.send(JSON.stringify({gameId:\"TikTocToe\",isJoin:\"true\",Player:_this2.props.username}));};this.ws.addEventListener(\"message\",this.updateCache);}}]);return PVPTikTokToeGame;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{username:state.user.username,pvp:state.pvp};};export default connect(mapStateToProps,{updatePvpScore:updatePvpScore,endGame:endGame,updateScoresInState:updateScoresInState})(PVPTikTokToeGame);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/tiktoctoe.js"],"names":["React","connect","updatePvpScore","endGame","updateScoresInState","histroy","Button","Table","Row","Col","Card","Container","Cell","gameserver","_","PVPTikTokToeGame","state","seconds","selectedData","myTurn","updateCache","e","msg","JSON","parse","data","console","log","updateGridVals","winner","setState","updatedValues","id","player","count","forEach","value","key","endGameHandler","props","selectCellHandler","post","username","response","renderGameGrid","map","width","renderWinner","render","paddingBottom","backgroundColor","border","push","ws","WebSocket","onopen","send","stringify","gameId","isJoin","Player","addEventListener","Component","mapStateToProps","user","pvp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {updatePvpScore, endGame, updateScoresInState} from '../actions/useraction'\nimport histroy from '../history'\nimport {Button, Table, Row, Col, Card, Container} from 'react-bootstrap'\nimport Cell from './cell'\nimport gameserver from '../apis/gameserver'\nimport _ from 'lodash';\n\nclass PVPTikTokToeGame extends React.Component{\n\n    state = {\n        seconds : 60,\n        selectedData : {},\n        myTurn : true\n    }\n\n    \n\n    componentDidMount(){\n\n        this.ws = new WebSocket('ws://localhost:8081/ws');\n        this.ws.onopen = () => this.ws.send(JSON.stringify({\n            gameId : \"TikTocToe\",\n            isJoin : \"true\",\n            Player : this.props.username\n        }));\n\n        this.ws.addEventListener(\"message\", this.updateCache)\n\n    }\n\n    updateCache = (e) => {\n        var msg = JSON.parse(e.data);\n        console.log(\"Received \",msg)\n        this.updateGridVals(msg)\n        if(!this.state.winner){\n            this.setState({\n                myTurn : true\n            })\n        }\n        \n    }\n\n    updateGridVals = (msg) => {\n        var updatedValues = {...this.state.selectedData}\n        updatedValues[msg.id] = msg.player\n        this.setState({\n            selectedData : updatedValues\n        })\n\n       \n\n        if(this.state.selectedData[1] == this.state.selectedData[2]){\n            if(this.state.selectedData[2] == this.state.selectedData[3]){\n                if(this.state.selectedData[1]){\n                    this.setState({ winner : \"Winner is \"+this.state.selectedData[1]})\n                }\n            }\n        }\n\n        if(this.state.selectedData[4] == this.state.selectedData[5]){\n            if(this.state.selectedData[5] == this.state.selectedData[6]){\n                if(this.state.selectedData[4]){this.setState({winner : \"Winner is \"+this.state.selectedData[4]})}\n            }\n        }\n\n        if(this.state.selectedData[7] == this.state.selectedData[8]){\n            if(this.state.selectedData[8] == this.state.selectedData[9]){\n                if(this.state.selectedData[8]){\n                    this.setState({winner : \"Winner is \"+this.state.selectedData[8]})\n                }\n            }\n        }\n\n        if(this.state.selectedData[1] == this.state.selectedData[5]){\n            if(this.state.selectedData[5] == this.state.selectedData[9]){\n                if(this.state.selectedData[5]){\n                    this.setState({winner : \"Winner is \"+this.state.selectedData[5]})\n                }\n            }\n        }\n\n        if(this.state.selectedData[3] == this.state.selectedData[5]){\n            if(this.state.selectedData[5] == this.state.selectedData[7]){\n                if(this.state.selectedData[5]){\n                    this.setState({winner : \"Winner is \"+this.state.selectedData[5]})\n                }\n            }\n        }\n\n        if(this.state.selectedData[2] == this.state.selectedData[5]){\n            if(this.state.selectedData[5] == this.state.selectedData[8]){\n                if(this.state.selectedData[5]){\n                    this.setState({winner : \"Winner is \"+this.state.selectedData[5]})\n                }\n            }\n        }\n\n        if(this.state.selectedData[1] == this.state.selectedData[4]){\n            if(this.state.selectedData[4] == this.state.selectedData[7]){\n                if(this.state.selectedData[4]){\n                    this.setState({winner : \"Winner is \"+this.state.selectedData[4]})\n                }\n            }\n        }\n\n        if(this.state.selectedData[3] == this.state.selectedData[6]){\n            if(this.state.selectedData[6] == this.state.selectedData[9]){\n                if(this.state.selectedData[6]){\n                    this.setState({winner : \"Winner is \"+this.state.selectedData[6]})\n                }\n            }\n        }\n\n        let count = 0;\n        _.forEach(this.state.selectedData, function(value, key) {\n            count ++\n        });\n\n        if(count == 9){\n            this.setState({\n                winner : \"Match is Draw\"\n            })\n        }\n\n        if(this.state.winner){\n            this.endGameHandler()\n            this.setState({\n                myTurn : false\n            })\n        }\n    }\n\n    endGameHandler = () =>{\n        this.props.endGame()\n    }\n\n    selectCellHandler = async (id) =>{\n        if(this.state.myTurn == true){\n            console.log(\"Selected : \",id)\n            const response = await gameserver.post(\"/matchmaking/tiktoctoe\",{\n                player : this.props.username,\n                id:id\n            })\n    \n            if(response){\n                this.updateGridVals({\n                    player : this.props.username,\n                    id : id\n                })\n            }\n\n            this.setState({\n                myTurn : false\n            })\n        }\n    }\n\n    renderGameGrid = () => {\n\n        return <div>\n            <Container>\n            <Row>\n                <Col md={3} lg={3}></Col>\n                \n                {[1,2,3].map((id) =>{\n                return <Cell key={id} style={{width:\"5%\"}} id={id} selected={this.state.selectedData[id]} selectCell={this.selectCellHandler} currentPlayer={this.props.username}/>\n                })}\n                \n                <Col md={3} lg={3}></Col>\n            </Row>\n            <Row>\n                <Col md={3} lg={3}></Col>\n                {[4,5,6].map(id =>{\n                    return <Cell key={id} style={{width:\"5%\"}}  id={id} selected={this.state.selectedData[id]} selectCell={this.selectCellHandler} currentPlayer={this.props.username}/>\n                })}\n                <Col md={3} lg={3}></Col>\n            </Row>\n            <Row>\n                <Col md={3} lg={3}></Col>\n                {[7,8,9].map(id =>{\n                    return <Cell key={id} style={{width:\"5%\"}}  id={id} selected={this.state.selectedData[id]} selectCell={this.selectCellHandler} currentPlayer={this.props.username}/>\n                })}\n                <Col md={3} lg={3}></Col>\n            </Row>\n            </Container>\n        </div>\n    }\n\n    renderWinner = () => {\n        return <h2>{this.state.winner} </h2>\n    }\n\n   \n    render = () => {\n        return <div>\n            <Row style={{paddingBottom:\"1%\"}}>\n                <Col>\n                    <Button block style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} onClick={()=>{histroy.push(\"/home\")}}>back</Button>\n                </Col>\n                <Col>\n                    <Button block style={{backgroundColor:\"#d6b84d\",border:\"#d6b84d\"}} onClick={()=>{histroy.push(\"/pvp/tictactoe\")}}>New-Match</Button>\n                </Col>\n            </Row>\n            <Card>\n            <Card.Header>\n            <h2>Tic Tac Toe</h2>\n            <h3>{this.state.winner ? this.state.winner : this.state.myTurn ? \"Your Turn\":\"Opponent Turn\"}</h3>\n            </Card.Header>\n            <Card.Body>\n                {this.renderGameGrid()}\n            </Card.Body>\n            </Card>\n        </div>\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username : state.user.username,\n        pvp : state.pvp\n    }\n}\n\nexport default connect(mapStateToProps,{updatePvpScore,endGame,updateScoresInState})(PVPTikTokToeGame);"]},"metadata":{},"sourceType":"module"}