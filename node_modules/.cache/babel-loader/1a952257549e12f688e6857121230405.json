{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver.js';\nimport LeaderboardTable from './leaderboardTable.js';\n\nclass LeaderboardView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      leaderboardEntries: [],\n      playerScores: {}\n    };\n\n    this.loadLeaderboard = async () => {\n      if (this.props && this.props.leaderboardName) {\n        const response = await gameserver.get('/leaderboard/' + this.props.leaderboardName);\n        const arr = [];\n        var i = 0;\n        response.data.subLeaderboards.map(lb => {\n          arr[i++] = response.data.players[lb];\n        });\n        this.setState({\n          leaderboardEntries: arr,\n          playerScores: response.data.details\n        });\n        console.log(arr);\n      }\n    };\n  }\n\n  componentWillReceiveProps() {\n    console.log(\"receive props\");\n    this.loadLeaderboard();\n  }\n\n  componentDidMount() {}\n\n  componentWillUpdate() {\n    this.loadLeaderboard();\n  }\n\n  render() {\n    var i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leaderboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Leaderboard Name : \", this.props.leaderboardName), this.state.leaderboardEntries.map(lb => {\n      return /*#__PURE__*/React.createElement(LeaderboardTable, {\n        key: i++,\n        instance: i++,\n        players: lb,\n        playerScores: this.state.playerScores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}\n\nexport default LeaderboardView;","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js"],"names":["React","gameserver","LeaderboardTable","LeaderboardView","Component","constructor","state","leaderboardEntries","playerScores","loadLeaderboard","props","leaderboardName","response","get","arr","i","data","subLeaderboards","map","lb","players","setState","details","console","log","componentWillReceiveProps","componentDidMount","componentWillUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA6C;AAIzCC,EAAAA,WAAW,GAAG;AACV;AADU,SAFdC,KAEc,GAFN;AAAEC,MAAAA,kBAAkB,EAAE,EAAtB;AAA2BC,MAAAA,YAAY,EAAE;AAAzC,KAEM;;AAAA,SAiBbC,eAjBa,GAiBK,YAAY;AAC1B,UAAG,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWC,eAA5B,EAA4C;AACzC,cAAMC,QAAQ,GAAI,MAAMX,UAAU,CAACY,GAAX,CAAe,kBAAgB,KAAKH,KAAL,CAAWC,eAA1C,CAAxB;AACA,cAAMG,GAAG,GAAG,EAAZ;AACA,YAAIC,CAAC,GAAE,CAAP;AACAH,QAAAA,QAAQ,CAACI,IAAT,CAAcC,eAAd,CAA8BC,GAA9B,CAAmCC,EAAD,IAAM;AACpCL,UAAAA,GAAG,CAACC,CAAC,EAAF,CAAH,GAAWH,QAAQ,CAACI,IAAT,CAAcI,OAAd,CAAsBD,EAAtB,CAAX;AACH,SAFD;AAGA,aAAKE,QAAL,CAAc;AACVd,UAAAA,kBAAkB,EAAGO,GADX;AAEVN,UAAAA,YAAY,EAAGI,QAAQ,CAACI,IAAT,CAAcM;AAFnB,SAAd;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACF;AAEL,KAhCa;AAGb;;AAEDW,EAAAA,yBAAyB,GAAE;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAKf,eAAL;AACH;;AAEDiB,EAAAA,iBAAiB,GAAE,CAClB;;AAEDC,EAAAA,mBAAmB,GAAE;AACjB,SAAKlB,eAAL;AACH;;AAmBDmB,EAAAA,MAAM,GAAE;AACJ,QAAIb,CAAC,GAAE,CAAP;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKL,KAAL,CAAWC,eAAnC,CADJ,EAGI,KAAKL,KAAL,CAAWC,kBAAX,CAA8BW,GAA9B,CAAmCC,EAAD,IAAM;AACpC,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEJ,CAAC,EAAxB;AAA4B,QAAA,QAAQ,EAAEA,CAAC,EAAvC;AAA2C,QAAA,OAAO,EAAEI,EAApD;AAAwD,QAAA,YAAY,EAAE,KAAKb,KAAL,CAAWE,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFH,CAHJ,CADJ;AAUH;;AAlDwC;;AAqD7C,eAAeL,eAAf","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver.js'\nimport LeaderboardTable from './leaderboardTable.js'\n\nclass LeaderboardView extends React.Component{\n\n    state = { leaderboardEntries :[] , playerScores :{}}\n\n    constructor (){\n        super();\n        \n    }\n\n    componentWillReceiveProps(){\n        console.log(\"receive props\")\n        this.loadLeaderboard();\n    }\n\n    componentDidMount(){\n    }\n\n    componentWillUpdate(){\n        this.loadLeaderboard();\n    }\n\n     loadLeaderboard = async () => {\n         if(this.props && this.props.leaderboardName){\n            const response =  await gameserver.get('/leaderboard/'+this.props.leaderboardName)\n            const arr = []\n            var i =0;\n            response.data.subLeaderboards.map((lb)=>{\n                arr[i++] = response.data.players[lb]\n            })\n            this.setState({\n                leaderboardEntries : arr,\n                playerScores : response.data.details\n            })\n            console.log(arr)\n         }\n        \n    }\n\n    render(){\n        var i =0;\n        return(\n            <div className={\"leaderboard\"}>\n                <h2>Leaderboard Name : {this.props.leaderboardName}</h2>\n                { \n                this.state.leaderboardEntries.map((lb)=>{\n                    return <LeaderboardTable key={i++} instance={i++} players={lb} playerScores={this.state.playerScores}/>\n                  })\n                }\n            </div>\n        )\n    }\n}\n\nexport default LeaderboardView;"]},"metadata":{},"sourceType":"module"}