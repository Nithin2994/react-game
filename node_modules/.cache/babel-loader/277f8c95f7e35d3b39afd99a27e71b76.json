{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/pvpGame.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updatePvpScore, endGame } from '../actions/useraction';\nimport histroy from '../history';\n\nclass PVPGame extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = () => {\n      let random = Math.round(Math.random()) * 10 + Math.round(Math.random()) * 20;\n      this.props.updatePvpScore(random);\n    };\n\n    this.renderGame = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          histroy.push(\"/home\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"back\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, \"Game Id : \", this.props.pvp.gameId), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \"Scores : \"), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, this.props.username), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, this.props.pvp.opponent)), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, this.props.pvpScores[this.props.username]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, this.props.pvpScores[this.props.pvp.opponent]))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, \"Click here for score\"));\n    };\n\n    this.renderWinner = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          histroy.push(\"/home\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"back\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"Game Finished\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"Winner is \", this.props.pvp.winner[this.props.pvp.opponent] && this.props.pvp.winner[this.props.username]));\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      this.props.endGame();\n    }, 10000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, this.props.pvp && this.props.pvp.gameStatus != \"Finished\" ? this.renderGame() : \"Game Finished\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.user.username,\n    pvp: state.pvp,\n    pvpScores: state.pvpScores\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatePvpScore,\n  endGame\n})(PVPGame);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/pvpGame.js"],"names":["React","connect","updatePvpScore","endGame","histroy","PVPGame","Component","submitHandler","random","Math","round","props","renderGame","push","pvp","gameId","username","opponent","pvpScores","renderWinner","winner","componentDidMount","setTimeout","render","gameStatus","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {updatePvpScore, endGame} from '../actions/useraction'\nimport histroy from '../history'\n\nclass PVPGame extends React.Component{\n\n    componentDidMount(){\n        setTimeout(\n            function() {\n                this.props.endGame()\n            }, 10000);\n    }\n\n    submitHandler = () => {\n        let random = (Math.round(Math.random()) * 10) + (Math.round(Math.random()) * 20)\n        this.props.updatePvpScore(random);\n    }\n\n\n    renderGame = () => {\n        return <div>\n        <button onClick={()=>{histroy.push(\"/home\")}}>back</button>\n        <h2>Game Id : {this.props.pvp.gameId}</h2>\n        \n        <h3>Scores : </h3>\n        <table>\n            <tr>\n                <td>{this.props.username}</td>\n                <td>{this.props.pvp.opponent}</td>\n            </tr>\n            <tr>\n                <td>{this.props.pvpScores[this.props.username]}</td>\n                <td>{this.props.pvpScores[this.props.pvp.opponent]}</td>\n            </tr>\n        </table>\n\n        <button type=\"submit\" onClick={this.submitHandler} >Click here for score</button>\n    </div>\n    }\n\n    renderWinner = () => {\n        return <div>\n            <button onClick={()=>{histroy.push(\"/home\")}}>back</button>\n            <h2>Game Finished</h2>\n            <h2>Winner is {this.props.pvp.winner[this.props.pvp.opponent] && this.props.pvp.winner[this.props.username]}</h2>\n        </div>\n    }\n\n    render(){\n        return <div>\n            {this.props.pvp && this.props.pvp.gameStatus != \"Finished\" ? this.renderGame() : \"Game Finished\"}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username : state.user.username,\n        pvp : state.pvp,\n        pvpScores : state.pvpScores\n    }\n}\n\nexport default connect(mapStateToProps,{updatePvpScore,endGame})(PVPGame);"]},"metadata":{},"sourceType":"module"}