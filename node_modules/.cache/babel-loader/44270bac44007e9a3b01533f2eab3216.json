{"ast":null,"code":"import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{findOpponent,pollOpponent}from'../actions/useraction';import histroy from'../history';import{Spinner,Button,Row,Col,Card}from'react-bootstrap';var PVPHome=/*#__PURE__*/function(_React$Component){_inherits(PVPHome,_React$Component);var _super=_createSuper(PVPHome);function PVPHome(){var _this;_classCallCheck(this,PVPHome);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={game:\"\"};return _this;}_createClass(PVPHome,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.match){this.props.findOpponent(this.props.match.params.game);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.props.pvp.status!=\"FOUND\"){this.props.pollOpponent();}else{// histroy.push(\"/game/\"+this.props.pvp.gameId)\nif(this.props.match){console.log(this.props.match);histroy.push(\"/\"+this.props.match.params.game);}}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},onClick:function onClick(){histroy.push(\"/home\");}},\"back\"))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{color:\"white\",backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}},/*#__PURE__*/React.createElement(\"h1\",null,\"Finding Opponent ...\")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Spinner,{size:\"lg\",animation:\"border\"}))));}}]);return PVPHome;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{pvp:state.pvp};};export default connect(mapStateToProps,{findOpponent:findOpponent,pollOpponent:pollOpponent})(PVPHome);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/pvpHome.js"],"names":["React","connect","findOpponent","pollOpponent","histroy","Spinner","Button","Row","Col","Card","PVPHome","state","game","props","match","params","pvp","status","console","log","push","backgroundColor","border","color","Component","mapStateToProps"],"mappings":"woBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,uBAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAAQC,OAAR,CAAiBC,MAAjB,CAAyBC,GAAzB,CAA8BC,GAA9B,CAAmCC,IAAnC,KAA8C,iBAA9C,C,GAEMC,CAAAA,O,2UAEFC,K,CAAQ,CACJC,IAAI,CAAG,EADH,C,gGAIW,CACf,GAAG,KAAKC,KAAL,CAAWC,KAAd,CAAoB,CAChB,KAAKD,KAAL,CAAWX,YAAX,CAAwB,KAAKW,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,IAAhD,EACH,CACJ,C,+DAEmB,CAChB,GAAG,KAAKC,KAAL,CAAWG,GAAX,CAAeC,MAAf,EAAyB,OAA5B,CAAoC,CAChC,KAAKJ,KAAL,CAAWV,YAAX,GACH,CAFD,IAEK,CACD;AACA,GAAG,KAAKU,KAAL,CAAWC,KAAd,CAAoB,CAChBI,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB,EACAV,OAAO,CAACgB,IAAR,CAAa,IAAI,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,IAAzC,EACH,CAEJ,CACJ,C,uCAEO,CACJ,mBAAO,4CACF,oBAAC,GAAD,mBACG,oBAAC,GAAD,mBACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAACS,eAAe,CAAC,SAAjB,CAA2BC,MAAM,CAAC,SAAlC,CAAf,CAA6D,OAAO,CAAE,kBAAI,CAAClB,OAAO,CAACgB,IAAR,CAAa,OAAb,EAAsB,CAAjG,SADJ,CADH,CADE,cAMH,oBAAC,IAAD,mBACA,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAACG,KAAK,CAAC,OAAP,CAAeF,eAAe,CAAC,SAA/B,CAAyCC,MAAM,CAAC,SAAhD,CAApB,eACA,qDADA,CADA,cAIA,oBAAC,IAAD,CAAM,IAAN,mBACA,oBAAC,OAAD,EAAS,IAAI,CAAC,IAAd,CAAmB,SAAS,CAAC,QAA7B,EADA,CAJA,CANG,CAAP,CAiBH,C,qBA3CiBtB,KAAK,CAACwB,S,EA8C5B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACd,KAAD,CAAW,CAC/B,MAAO,CACHK,GAAG,CAAGL,KAAK,CAACK,GADT,CAAP,CAGH,CAJD,CAMA,cAAef,CAAAA,OAAO,CAACwB,eAAD,CAAiB,CAACvB,YAAY,CAAZA,YAAD,CAAcC,YAAY,CAAZA,YAAd,CAAjB,CAAP,CAAqDO,OAArD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { findOpponent, pollOpponent } from '../actions/useraction'\nimport histroy from '../history'\nimport {Spinner, Button, Row, Col, Card} from 'react-bootstrap'\n\nclass PVPHome extends React.Component{\n\n    state = {\n        game : \"\"\n    }\n\n    componentDidMount(){\n        if(this.props.match){\n            this.props.findOpponent(this.props.match.params.game);\n        }   \n    }\n\n    componentDidUpdate(){\n        if(this.props.pvp.status != \"FOUND\"){\n            this.props.pollOpponent();\n        }else{\n            // histroy.push(\"/game/\"+this.props.pvp.gameId)\n            if(this.props.match){\n                console.log(this.props.match)\n                histroy.push(\"/\"+this.props.match.params.game)\n            }\n            \n        }\n    }\n\n    render(){\n        return <div>\n             <Row>\n                <Col>\n                    <Button style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} onClick={()=>{histroy.push(\"/home\")}}>back</Button>\n                </Col>\n            </Row>\n            <Card>\n            <Card.Header style={{color:\"white\",backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}}>\n            <h1>Finding Opponent ...</h1>\n            </Card.Header>\n            <Card.Body>\n            <Spinner size=\"lg\" animation=\"border\" />\n            </Card.Body>\n            </Card>\n\n            </div>\n            \n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pvp : state.pvp\n    }\n}\n\nexport default connect(mapStateToProps,{findOpponent,pollOpponent})(PVPHome);"]},"metadata":{},"sourceType":"module"}