{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/registerFormComponent.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass RegisterFormComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.register = formValues => {\n      this.props.onRegisterClick(formValues.username, formValues.password, formValues.email, formValues.mobileNo);\n    };\n  }\n\n  renderInput({\n    input,\n    lable,\n    type,\n    meta\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, lable), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.register),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      component: this.renderInput,\n      lable: \"Username\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: this.renderInput,\n      lable: \"Password\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"repassword\",\n      component: this.renderInput,\n      lable: \"Re-Password\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      component: this.renderInput,\n      lable: \"Email\",\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"mobileNo\",\n      component: this.renderInput,\n      lable: \"Mobile No\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 54\n      }\n    }, meta.error) : \"\", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"Register\")));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"Enter username\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"Enter password\";\n  }\n\n  if (!formValues.repassword) {\n    errors.repassword = \"Enter valid username\";\n  }\n\n  if (formValues.password != formValues.repassword) {\n    errors.repassword = \"Not matching with password \";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'RegisterForm',\n  validate: validate\n})(RegisterFormComponent);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/registerFormComponent.js"],"names":["React","Field","reduxForm","RegisterFormComponent","Component","register","formValues","props","onRegisterClick","username","password","email","mobileNo","renderInput","input","lable","type","meta","render","handleSubmit","touched","error","color","validate","errors","repassword","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm} from 'redux-form'\n\nclass RegisterFormComponent extends React.Component{\n\n    renderInput({input, lable, type, meta}){\n        return <div>\n            <label>{lable}</label>\n            <input {...input} type={type} />\n        </div>\n    }\n\n    register = (formValues) => {\n        this.props.onRegisterClick(formValues.username,formValues.password,formValues.email,formValues.mobileNo);\n    }\n\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.props.handleSubmit(this.register)}>\n                    <Field name=\"username\" component={this.renderInput} lable=\"Username\" type=\"text\"/>\n                    <Field name=\"password\" component={this.renderInput} lable=\"Password\" type=\"password\"/>\n                    <Field name=\"repassword\" component={this.renderInput} lable=\"Re-Password\" type=\"password\"/>\n                    <Field name=\"email\" component={this.renderInput} lable=\"Email\" type=\"email\"/>\n                    <Field name=\"mobileNo\" component={this.renderInput} lable=\"Mobile No\" type=\"number\"/>\n                    {\n                        meta.touched && meta.error ? <div style={{color:\"red\"}}>{meta.error}</div> : \"\" \n                    }\n                    <button type=\"submit\" >Register</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const errors= {}\n    if(!formValues.username){\n        errors.username = \"Enter username\"\n    }\n    if(!formValues.password){\n        errors.password = \"Enter password\"\n    }\n    if(!formValues.repassword){\n        errors.repassword = \"Enter valid username\"\n    }\n    if(formValues.password != formValues.repassword) {\n        errors.repassword = \"Not matching with password \"\n    }\n\n    return errors\n}\nexport default reduxForm({\n    form : 'RegisterForm',\n    validate : validate\n})(RegisterFormComponent)"]},"metadata":{},"sourceType":"module"}