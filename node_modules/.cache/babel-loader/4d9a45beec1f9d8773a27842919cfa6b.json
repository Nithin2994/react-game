{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver.js';\nimport LeaderboardTable from './leaderboardTable.js';\nimport { connect } from 'react-redux';\nimport { loadLeaderboardData } from '../actions/useraction';\n\nclass LeaderboardView extends React.Component {\n  componentDidMount() {\n    this.props.loadLeaderboardData(this.props.leaderboardName);\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    var i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leaderboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Leaderboard Name : \", this.props.leaderboardName), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.loadLeaderboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \" RELOAD LEADERBOARDS\"), this.props.leaderboardData.subLeaderboards.map(lb => {\n      players = this.props.leaderboardData.players[lb];\n      return /*#__PURE__*/React.createElement(LeaderboardTable, {\n        key: i++,\n        instance: i++,\n        players: players,\n        playerScores: this.props.leaderboardData.details,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leaderboardData: state.leaderboardsData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadLeaderboardData\n})(LeaderboardView);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js"],"names":["React","gameserver","LeaderboardTable","connect","loadLeaderboardData","LeaderboardView","Component","componentDidMount","props","leaderboardName","componentDidUpdate","render","i","loadLeaderboard","leaderboardData","subLeaderboards","map","lb","players","details","mapStateToProps","state","leaderboardsData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAGA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA6C;AAEzCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,mBAAX,CAA+B,KAAKI,KAAL,CAAWC,eAA1C;AACH;;AAEDC,EAAAA,kBAAkB,GAAE,CAEnB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,CAAC,GAAE,CAAP;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKJ,KAAL,CAAWC,eAAnC,CADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKI,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAIM,KAAKL,KAAL,CAAWM,eAAX,CAA2BC,eAA3B,CAA2CC,GAA3C,CAAgDC,EAAD,IAAM;AACnDC,MAAAA,OAAO,GAAG,KAAKV,KAAL,CAAWM,eAAX,CAA2BI,OAA3B,CAAmCD,EAAnC,CAAV;AACA,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEL,CAAC,EAAxB;AAA4B,QAAA,QAAQ,EAAEA,CAAC,EAAvC;AAA2C,QAAA,OAAO,EAAEM,OAApD;AAA6D,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWM,eAAX,CAA2BK,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF,KAHA,CAJN,CADJ;AAYH;;AAxBwC;;AA2B7C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,eAAe,EAAGO,KAAK,CAACC;AADrB,GAAP;AAGH,CAJD;;AAKA,eAAenB,OAAO,CAACiB,eAAD,EAAiB;AAAChB,EAAAA;AAAD,CAAjB,CAAP,CAA+CC,eAA/C,CAAf","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver.js'\nimport LeaderboardTable from './leaderboardTable.js'\nimport {connect} from 'react-redux'\nimport { loadLeaderboardData } from '../actions/useraction'\n\n\nclass LeaderboardView extends React.Component{\n\n    componentDidMount(){\n        this.props.loadLeaderboardData(this.props.leaderboardName);\n    }\n\n    componentDidUpdate(){\n\n    }\n\n    render(){\n        var i =0;\n        return(\n            <div className={\"leaderboard\"}>\n                <h2>Leaderboard Name : {this.props.leaderboardName}</h2>\n                <button onClick={this.loadLeaderboard}> RELOAD LEADERBOARDS</button>\n                { \n                  this.props.leaderboardData.subLeaderboards.map((lb)=>{\n                    players = this.props.leaderboardData.players[lb]\n                    return <LeaderboardTable key={i++} instance={i++} players={players} playerScores={this.props.leaderboardData.details}/>\n                 })\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        leaderboardData : state.leaderboardsData\n    }\n}\nexport default connect(mapStateToProps,{loadLeaderboardData})(LeaderboardView);"]},"metadata":{},"sourceType":"module"}