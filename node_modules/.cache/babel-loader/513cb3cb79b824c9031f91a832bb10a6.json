{"ast":null,"code":"import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{updatePvpScore,endGame,updateScoresInState}from'../actions/useraction';import histroy from'../history';import{Button,Jumbotron,Row,Col,Card}from'react-bootstrap';var PVPGame=/*#__PURE__*/function(_React$Component){_inherits(PVPGame,_React$Component);var _super=_createSuper(PVPGame);function PVPGame(){var _this;_classCallCheck(this,PVPGame);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={seconds:20};_this.updateCache=function(e){var msg=JSON.parse(e.data);console.log(\"Updated\",msg);_this.props.updateScoresInState(msg);};_this.endGameHandler=function(){_this.props.endGame();};_this.submitHandler=function(){var random=Math.round(Math.random())*10+Math.round(Math.random())*20;_this.props.updatePvpScore(random);};_this.renderGame=function(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{paddingBottom:\"1%\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{block:true,style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},onClick:function onClick(){histroy.push(\"/home\");}},\"back\")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{block:true,style:{backgroundColor:\"#d6b84d\",border:\"#d6b84d\"},onClick:function onClick(){histroy.push(\"/pvp/highscore\");}},\"New-Match\"))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{style:{color:\"white\",backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}},/*#__PURE__*/React.createElement(\"h4\",null,\"Game Id : \",_this.props.pvp.gameId),/*#__PURE__*/React.createElement(\"h4\",null,\"Time : \",_this.state.seconds)),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:\"https://github.com/Nithin2994/react-game/blob/gh-pages/images/user.png?raw=true\"}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,_this.props.username),/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Score  \",_this.props.pvpScores[_this.props.username])),/*#__PURE__*/React.createElement(Button,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},onClick:_this.submitHandler},\"Play\")))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:\"/images/user.png\"}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,_this.props.pvp.opponent),/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Score  \",_this.props.pvpScores[_this.props.pvp.opponent])))))))));};_this.renderWinner=function(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{paddingBottom:\"1%\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},onClick:function onClick(){histroy.push(\"/home\");}},\"back\"))),/*#__PURE__*/React.createElement(Card,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Congratulations \",_this.props.pvp.winner[_this.props.pvp.opponent]?_this.props.pvp.opponent:_this.props.username,\"  \")),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:\"/images/user.png\"})),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Row,{style:{padding:\"1%\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},text:\"white\"},/*#__PURE__*/React.createElement(Card.Header,null,\"SCORE\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"h2\",null,_this.props.pvp.winner[_this.props.pvp.opponent]?_this.props.pvp.winner[_this.props.pvp.opponent]:_this.props.pvp.winner[_this.props.username]))))),/*#__PURE__*/React.createElement(Row,{style:{padding:\"1%\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},text:\"white\"},/*#__PURE__*/React.createElement(Card.Header,null,\"LEVEL\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"h2\",null,_this.props.pvp.winner[_this.props.pvp.opponent]?_this.props.pvp.winner[_this.props.pvp.opponent]:_this.props.pvp.winner[_this.props.username]))))),/*#__PURE__*/React.createElement(Row,{style:{padding:\"1%\"}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},text:\"white\"},/*#__PURE__*/React.createElement(Card.Header,null,\"REWARDS\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"h2\",null,_this.props.pvp.winner[_this.props.pvp.opponent]?_this.props.pvp.winner[_this.props.pvp.opponent]:_this.props.pvp.winner[_this.props.username]))))))))));};return _this;}_createClass(PVPGame,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.ws=new WebSocket('ws://3.17.67.172:8081/ws');this.ws.onopen=function(){return _this2.ws.send(JSON.stringify({gameId:_this2.props.pvp.gameId,isJoin:\"true\",Player:_this2.props.username}));};this.ws.addEventListener(\"message\",this.updateCache);setInterval(function(){_this2.setState({seconds:_this2.state.seconds-1});},1000);setTimeout(this.endGameHandler,20000);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.props.pvp&&this.props.pvp.gameStatus!=\"Finished\"?this.renderGame():this.renderWinner());}}]);return PVPGame;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{username:state.user.username,pvp:state.pvp,pvpScores:state.pvpScores};};export default connect(mapStateToProps,{updatePvpScore:updatePvpScore,endGame:endGame,updateScoresInState:updateScoresInState})(PVPGame);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/pvpGame.js"],"names":["React","connect","updatePvpScore","endGame","updateScoresInState","histroy","Button","Jumbotron","Row","Col","Card","PVPGame","state","seconds","updateCache","e","msg","JSON","parse","data","console","log","props","endGameHandler","submitHandler","random","Math","round","renderGame","paddingBottom","backgroundColor","border","push","color","pvp","gameId","username","pvpScores","opponent","renderWinner","winner","padding","ws","WebSocket","onopen","send","stringify","isJoin","Player","addEventListener","setInterval","setState","setTimeout","gameStatus","Component","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {updatePvpScore, endGame, updateScoresInState} from '../actions/useraction'\nimport histroy from '../history'\nimport {Button, Jumbotron, Row, Col, Card} from 'react-bootstrap'\n\nclass PVPGame extends React.Component{\n\n    state = {seconds : 20}\n\n    componentDidMount(){\n\n        this.ws = new WebSocket('ws://3.17.67.172:8081/ws');\n        this.ws.onopen = () => this.ws.send(JSON.stringify({\n            gameId : this.props.pvp.gameId,\n            isJoin : \"true\",\n            Player : this.props.username\n        }));\n\n        this.ws.addEventListener(\"message\", this.updateCache)\n\n        setInterval(\n            ()=>{ this.setState({\n                seconds : this.state.seconds - 1\n            })},1000\n        )\n        setTimeout(\n            this.endGameHandler, 20000);\n    }\n\n    updateCache = (e) => {\n        var msg = JSON.parse(e.data);\n        console.log(\"Updated\",msg)\n        this.props.updateScoresInState(msg)\n    }\n\n    endGameHandler = () =>{\n        this.props.endGame()\n    }\n\n    submitHandler = () => {\n        let random = (Math.round(Math.random()) * 10) + (Math.round(Math.random()) * 20)\n        this.props.updatePvpScore(random);\n    }\n\n\n    renderGame = () => {\n        return <div>\n            <Row style={{paddingBottom:\"1%\"}}>\n                <Col>\n                    <Button block style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} onClick={()=>{histroy.push(\"/home\")}}>back</Button>\n                </Col>\n                <Col>\n                    <Button block style={{backgroundColor:\"#d6b84d\",border:\"#d6b84d\"}} onClick={()=>{histroy.push(\"/pvp/highscore\")}}>New-Match</Button>\n                </Col>\n            </Row>\n            \n            <Card>\n            <Card.Header style={{color:\"white\",backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}}>\n            <h4>Game Id : {this.props.pvp.gameId}</h4>\n                        <h4>Time : {this.state.seconds}</h4>\n            </Card.Header>\n            <Card.Body>\n            <Row>\n                <Col>\n                <Card>\n                    <Card.Img variant=\"top\" src=\"https://github.com/Nithin2994/react-game/blob/gh-pages/images/user.png?raw=true\" />\n                    <Card.Body>\n                        <Card.Title>{this.props.username}</Card.Title>\n                        <Card.Text><h2>Score  {this.props.pvpScores[this.props.username]}</h2></Card.Text>\n                        <Button style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}}  onClick={this.submitHandler} >Play</Button>\n                    </Card.Body>\n                </Card>\n                </Col>\n                <Col>\n                <Card>\n                    <Card.Img variant=\"top\" src=\"/images/user.png\" />\n                    <Card.Body>\n                        <Card.Title>{this.props.pvp.opponent}</Card.Title>\n                        <Card.Text><h2>Score  {this.props.pvpScores[this.props.pvp.opponent]}</h2></Card.Text>\n                        {/* <Button variant=\"primary\" onClick={this.submitHandler} >Play</Button> */}\n                    </Card.Body>\n                </Card>\n                </Col>\n            </Row>\n            </Card.Body>\n    </Card>\n\n            \n    </div>\n    }\n\n    renderWinner = () => {\n        return <div>\n            <Row style={{paddingBottom:\"1%\"}}>\n                <Col>\n                    <Button style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} onClick={()=>{histroy.push(\"/home\")}}>back</Button>\n                </Col>\n            </Row>\n            <Card style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}}>\n            <Card.Header>\n            <h2>Congratulations {this.props.pvp.winner[this.props.pvp.opponent] ? this.props.pvp.opponent : this.props.username}  </h2>\n            </Card.Header>\n            <Card.Body>\n                <Row>\n                    <Col>\n                    <Card.Img variant=\"top\" src=\"/images/user.png\" />\n                    </Col>\n                    <Col>\n                    <Row style={{padding:\"1%\"}}>\n                        <Col>\n                        <Card style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} text=\"white\">\n                        <Card.Header>\n                        SCORE\n                        </Card.Header>\n                        <Card.Body>\n                        <h2>{this.props.pvp.winner[this.props.pvp.opponent] ? this.props.pvp.winner[this.props.pvp.opponent] : this.props.pvp.winner[this.props.username]}</h2>\n                        </Card.Body>\n                        </Card>\n                        </Col>\n                    </Row>\n                    <Row style={{padding:\"1%\"}}>\n                        <Col>\n                        <Card style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} text=\"white\">\n                        <Card.Header>\n                        LEVEL\n                        </Card.Header>\n                        <Card.Body>\n                        <h2>{this.props.pvp.winner[this.props.pvp.opponent] ? this.props.pvp.winner[this.props.pvp.opponent] : this.props.pvp.winner[this.props.username]}</h2>\n                        </Card.Body>\n                        </Card>\n                        </Col>\n                    </Row>\n                    <Row style={{padding:\"1%\"}}>\n                        <Col>\n                        <Card style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} text=\"white\">\n                        <Card.Header>\n                        REWARDS\n                        </Card.Header>\n                        <Card.Body>\n                        <h2>{this.props.pvp.winner[this.props.pvp.opponent] ? this.props.pvp.winner[this.props.pvp.opponent] : this.props.pvp.winner[this.props.username]}</h2>\n                        </Card.Body>\n                        </Card>\n                        </Col>\n                    </Row>\n                    </Col>\n                </Row>\n    \n            </Card.Body>\n            </Card>\n        </div>\n    }\n\n    render(){\n        return <div>\n            {this.props.pvp && this.props.pvp.gameStatus != \"Finished\" ? this.renderGame() : this.renderWinner()}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username : state.user.username,\n        pvp : state.pvp,\n        pvpScores : state.pvpScores\n    }\n}\n\nexport default connect(mapStateToProps,{updatePvpScore,endGame,updateScoresInState})(PVPGame);"]},"metadata":{},"sourceType":"module"}