{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst usersReducer = (oldUser = {\n  username: \"Nithin1\",\n  token: \"\"\n}, action) => {\n  if (action.type == \"SAVE_USER\") {\n    return {\n      username: action.payload.username,\n      token: action.payload.token\n    };\n  }\n\n  return oldUser;\n};\n\nconst leaderboardsReducers = (leaderboards = [], action) => {\n  if (action.type == \"LOAD_LEADERBOARDS\") {\n    return action.payload.leaderboards;\n  }\n\n  return leaderboards;\n};\n\nconst leaderboardsDataReducers = (leaderboardDetails = [], action) => {\n  addLeaderboard = true;\n\n  if (action.type == \"LOAD_LEADERBOARDS_DATA\") {\n    let leaderboardDetailsTemp = [];\n\n    if (leaderboardDetails.length > 0) {\n      leaderboardDetails.map(leaderboard => {\n        if (leaderboard.leaderboardName === action.payload.leaderboardId) {\n          addLeaderboard = false;\n          leaderboard.data = action.payload.leaderboardsData;\n        } else {\n          leaderboardDetailsTemp = [...leaderboardDetailsTemp, obj];\n        }\n      });\n    }\n\n    if (addLeaderboard) {\n      let obj = {\n        leaderboardName: action.payload.leaderboardId,\n        data: action.payload.leaderboardsData\n      };\n      leaderboardDetailsTemp = [...leaderboardDetailsTemp, obj];\n    }\n\n    return leaderboardDetailsTemp;\n  }\n\n  return leaderboardDetails;\n};\n\nconst updateScore = (score = 0, action) => {\n  if (action.type == \"UPDATE_SCORE\") {\n    return action.score;\n  }\n\n  return score;\n};\n\nconst showError = (error = \"\", action) => {\n  if (action.type = \"SHOW_SCORE_ERROR\") {\n    return \"Error in setting score\";\n  }\n\n  return error;\n};\n\nexport default combineReducers({\n  user: usersReducer,\n  leaderboards: leaderboardsReducers,\n  leaderboardsData: leaderboardsDataReducers,\n  score: updateScore,\n  errorMessage: showError\n});","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/reducers/index.js"],"names":["combineReducers","usersReducer","oldUser","username","token","action","type","payload","leaderboardsReducers","leaderboards","leaderboardsDataReducers","leaderboardDetails","addLeaderboard","leaderboardDetailsTemp","length","map","leaderboard","leaderboardName","leaderboardId","data","leaderboardsData","obj","updateScore","score","showError","error","user","errorMessage"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;;AAGA,MAAMC,YAAY,GAAG,CAACC,OAAO,GAAG;AAAEC,EAAAA,QAAQ,EAAE,SAAZ;AAAuBC,EAAAA,KAAK,EAAC;AAA7B,CAAX,EAA8CC,MAA9C,KAAyD;AAC1E,MAAGA,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA8B;AAC1B,WAAO;AACHH,MAAAA,QAAQ,EAAGE,MAAM,CAACE,OAAP,CAAeJ,QADvB;AAEHC,MAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeH;AAFnB,KAAP;AAIH;;AAED,SAAOF,OAAP;AACH,CATD;;AAWA,MAAMM,oBAAoB,GAAG,CAACC,YAAY,GAAC,EAAd,EAAkBJ,MAAlB,KAA6B;AACtD,MAAGA,MAAM,CAACC,IAAP,IAAe,mBAAlB,EAAsC;AAClC,WAAOD,MAAM,CAACE,OAAP,CAAeE,YAAtB;AACH;;AAED,SAAOA,YAAP;AACH,CAND;;AAQA,MAAMC,wBAAwB,GAAG,CAACC,kBAAkB,GAAE,EAArB,EAAyBN,MAAzB,KAAoC;AACjEO,EAAAA,cAAc,GAAG,IAAjB;;AACA,MAAGP,MAAM,CAACC,IAAP,IAAe,wBAAlB,EAA2C;AACvC,QAAIO,sBAAsB,GAAG,EAA7B;;AACA,QAAGF,kBAAkB,CAACG,MAAnB,GAA4B,CAA/B,EAAiC;AAC7BH,MAAAA,kBAAkB,CAACI,GAAnB,CAAwBC,WAAD,IAAe;AAClC,YAAGA,WAAW,CAACC,eAAZ,KAAgCZ,MAAM,CAACE,OAAP,CAAeW,aAAlD,EAAiE;AAC7DN,UAAAA,cAAc,GAAE,KAAhB;AACAI,UAAAA,WAAW,CAACG,IAAZ,GAAmBd,MAAM,CAACE,OAAP,CAAea,gBAAlC;AACH,SAHD,MAGK;AACDP,UAAAA,sBAAsB,GAAG,CAAC,GAAIA,sBAAL,EAA6BQ,GAA7B,CAAzB;AACH;AACJ,OAPD;AAQH;;AACD,QAAGT,cAAH,EAAkB;AACd,UAAIS,GAAG,GAAG;AACNJ,QAAAA,eAAe,EAAGZ,MAAM,CAACE,OAAP,CAAeW,aAD3B;AAENC,QAAAA,IAAI,EAAGd,MAAM,CAACE,OAAP,CAAea;AAFhB,OAAV;AAIAP,MAAAA,sBAAsB,GAAG,CAAC,GAAIA,sBAAL,EAA6BQ,GAA7B,CAAzB;AACH;;AAID,WAAOR,sBAAP;AACH;;AAED,SAAOF,kBAAP;AACH,CA5BD;;AA8BA,MAAMW,WAAW,GAAG,CAACC,KAAK,GAAC,CAAP,EAAUlB,MAAV,KAAqB;AACrC,MAAGA,MAAM,CAACC,IAAP,IAAe,cAAlB,EAAiC;AAC7B,WAAOD,MAAM,CAACkB,KAAd;AACH;;AACD,SAAOA,KAAP;AAEH,CAND;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAG,EAAT,EAAapB,MAAb,KAAwB;AACtC,MAAGA,MAAM,CAACC,IAAP,GAAa,kBAAhB,EAAmC;AAC/B,WAAO,wBAAP;AACH;;AACD,SAAOmB,KAAP;AACH,CALD;;AAOA,eAAezB,eAAe,CAAC;AAC3B0B,EAAAA,IAAI,EAAEzB,YADqB;AAE3BQ,EAAAA,YAAY,EAAGD,oBAFY;AAG3BY,EAAAA,gBAAgB,EAAGV,wBAHQ;AAI3Ba,EAAAA,KAAK,EAAGD,WAJmB;AAK3BK,EAAAA,YAAY,EAAGH;AALY,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux'\n\n\nconst usersReducer = (oldUser = { username :\"Nithin1\", token:\"\" }, action) => {\n    if(action.type == \"SAVE_USER\"){\n        return {\n            username : action.payload.username,\n            token: action.payload.token\n        }\n    }\n\n    return oldUser\n}\n\nconst leaderboardsReducers = (leaderboards=[], action) => {\n    if(action.type == \"LOAD_LEADERBOARDS\"){\n        return action.payload.leaderboards\n    }\n\n    return leaderboards;\n}\n\nconst leaderboardsDataReducers = (leaderboardDetails =[], action) => {\n    addLeaderboard = true;\n    if(action.type == \"LOAD_LEADERBOARDS_DATA\"){\n        let leaderboardDetailsTemp = []\n        if(leaderboardDetails.length > 0){\n            leaderboardDetails.map((leaderboard)=>{\n                if(leaderboard.leaderboardName === action.payload.leaderboardId ){\n                    addLeaderboard= false;\n                    leaderboard.data = action.payload.leaderboardsData;\n                }else{\n                    leaderboardDetailsTemp = [... leaderboardDetailsTemp, obj]\n                }\n            })\n        }\n        if(addLeaderboard){\n            let obj = {\n                leaderboardName : action.payload.leaderboardId,\n                data : action.payload.leaderboardsData\n            }\n            leaderboardDetailsTemp = [... leaderboardDetailsTemp, obj]\n        }\n        \n        \n        \n        return leaderboardDetailsTemp\n    }\n\n    return leaderboardDetails;\n}\n\nconst updateScore = (score=0, action) => {\n    if(action.type == \"UPDATE_SCORE\"){\n        return action.score\n    }\n    return score\n\n}\n\nconst showError = (error = \"\", action) => {\n    if(action.type =\"SHOW_SCORE_ERROR\"){\n        return \"Error in setting score\"\n    }\n    return error;\n}\n\nexport default combineReducers({\n    user: usersReducer,\n    leaderboards : leaderboardsReducers,\n    leaderboardsData : leaderboardsDataReducers,\n    score : updateScore,\n    errorMessage : showError\n})"]},"metadata":{},"sourceType":"module"}