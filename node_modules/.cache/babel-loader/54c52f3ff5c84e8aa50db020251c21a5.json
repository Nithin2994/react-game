{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/pvpGame.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updatePvpScore } from '../actions/useraction';\n\nclass PVPGame extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = () => {\n      let random = Math.round(Math.random()) * 10 + Math.round(Math.random()) * 20;\n      this.props.updatePvpScore(random);\n    };\n\n    this.renderGame = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, \"Game Id : \", this.props.pvp.gameId), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, \"Scores : \"), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, this.props.username), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, this.props.pvp.opponent)), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, this.props.pvpScores[this.props.username]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, this.props.pvpScores[this.props.pvp.opponent]))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"Click here for score\"));\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      console.log(\"End Game Call\");\n    }, 5000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, this.props.pvp && this.props.pvp.gameStatus != \"Finished\" ? this.renderGame() : \"Game Finished\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.user.username,\n    pvp: state.pvp,\n    pvpScores: state.pvpScores\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatePvpScore\n})(PVPGame);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/pvpGame.js"],"names":["React","connect","updatePvpScore","PVPGame","Component","submitHandler","random","Math","round","props","renderGame","pvp","gameId","username","opponent","pvpScores","componentDidMount","setTimeout","console","log","render","gameStatus","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAAA;AAAA;;AAAA,SASjCC,aATiC,GASjB,MAAM;AAClB,UAAIC,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,IAA4B,EAA7B,GAAoCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,IAA4B,EAA7E;AACA,WAAKG,KAAL,CAAWP,cAAX,CAA0BI,MAA1B;AACH,KAZgC;;AAAA,SAejCI,UAfiC,GAepB,MAAM;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe,KAAKD,KAAL,CAAWE,GAAX,CAAeC,MAA9B,CADO,eAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHO,eAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWI,QAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKJ,KAAL,CAAWE,GAAX,CAAeG,QAApB,CAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWM,SAAX,CAAqB,KAAKN,KAAL,CAAWI,QAAhC,CAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKJ,KAAL,CAAWM,SAAX,CAAqB,KAAKN,KAAL,CAAWE,GAAX,CAAeG,QAApC,CAAL,CAFJ,CALJ,CAJO,eAeP;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKT,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAfO,CAAP;AAiBH,KAjCgC;AAAA;;AAEjCW,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,UAAU,CACN,YAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAHK,EAGH,IAHG,CAAV;AAIH;;AA4BDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAKX,KAAL,CAAWE,GAAX,IAAkB,KAAKF,KAAL,CAAWE,GAAX,CAAeU,UAAf,IAA6B,UAA/C,GAA4D,KAAKX,UAAL,EAA5D,GAAgF,eAD9E,CAAP;AAGH;;AAvCgC;;AA0CrC,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,QAAQ,EAAGU,KAAK,CAACC,IAAN,CAAWX,QADnB;AAEHF,IAAAA,GAAG,EAAGY,KAAK,CAACZ,GAFT;AAGHI,IAAAA,SAAS,EAAGQ,KAAK,CAACR;AAHf,GAAP;AAKH,CAND;;AAQA,eAAed,OAAO,CAACqB,eAAD,EAAiB;AAACpB,EAAAA;AAAD,CAAjB,CAAP,CAA0CC,OAA1C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {updatePvpScore} from '../actions/useraction'\n\nclass PVPGame extends React.Component{\n\n    componentDidMount(){\n        setTimeout(\n            function() {\n              console.log(\"End Game Call\")\n            }, 5000);\n    }\n\n    submitHandler = () => {\n        let random = (Math.round(Math.random()) * 10) + (Math.round(Math.random()) * 20)\n        this.props.updatePvpScore(random);\n    }\n\n\n    renderGame = () => {\n        return <div>\n        <h2>Game Id : {this.props.pvp.gameId}</h2>\n        \n        <h3>Scores : </h3>\n        <table>\n            <tr>\n                <td>{this.props.username}</td>\n                <td>{this.props.pvp.opponent}</td>\n            </tr>\n            <tr>\n                <td>{this.props.pvpScores[this.props.username]}</td>\n                <td>{this.props.pvpScores[this.props.pvp.opponent]}</td>\n            </tr>\n        </table>\n\n        <button type=\"submit\" onClick={this.submitHandler} >Click here for score</button>\n    </div>\n    }\n\n    render(){\n        return <div>\n            {this.props.pvp && this.props.pvp.gameStatus != \"Finished\" ? this.renderGame() : \"Game Finished\"}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username : state.user.username,\n        pvp : state.pvp,\n        pvpScores : state.pvpScores\n    }\n}\n\nexport default connect(mapStateToProps,{updatePvpScore})(PVPGame);"]},"metadata":{},"sourceType":"module"}