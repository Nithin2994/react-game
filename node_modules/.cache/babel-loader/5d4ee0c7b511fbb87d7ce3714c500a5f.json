{"ast":null,"code":"import _objectSpread from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{combineReducers}from'redux';import{reducer as formReducer}from'redux-form';var usersReducer=function usersReducer(){var oldUser=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{username:\"\",token:\"\"};var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"SAVE_USER\"){console.log(\"userreducer\",action);return{username:action.payload.username,token:action.payload.token};}if(action.type==\"CLEAR_USER\"){return{};}return oldUser;};var leaderboardsReducers=function leaderboardsReducers(){var leaderboards=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"LOAD_LEADERBOARDS\"){return action.payload.leaderboards;}return leaderboards;};var leaderboardsDataReducers=function leaderboardsDataReducers(){var leaderboardDetails=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;var addLeaderboard=true;if(action.type==\"LOAD_LEADERBOARDS_DATA\"){var leaderboardDetailsTemp=[];if(leaderboardDetails.length>0){leaderboardDetails.map(function(leaderboard){if(leaderboard.leaderboardName===action.payload.leaderboardId){console.log(\"update data\");addLeaderboard=false;leaderboard.data=action.payload.leaderboardsData;}leaderboardDetailsTemp=[].concat(_toConsumableArray(leaderboardDetailsTemp),[leaderboard]);});}if(addLeaderboard){var obj={leaderboardName:action.payload.leaderboardId,data:action.payload.leaderboardsData};leaderboardDetailsTemp=[].concat(_toConsumableArray(leaderboardDetailsTemp),[obj]);}return leaderboardDetailsTemp;}return leaderboardDetails;};var updateScore=function updateScore(){var score=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"UPDATE_SCORE\"){console.log(\"update\",action.payload.score);return action.payload.score;}return score;};var showError=function showError(){var errorMessage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"SHOW_SCORE_ERROR\"){var errorMessageTemp=action.payload.message;return errorMessageTemp;}return errorMessage;};var loadcurrencies=function loadcurrencies(){var currencies=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"LOAD_CURRENCIES\"){var currenciesTemp=action.payload.currencies;return currenciesTemp;}return currencies;};var loadBalances=function loadBalances(){var balances=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"LOAD_BALANCES\"){var _balances=action.payload.balances;return _balances;}return balances;};var findMatch=function findMatch(){var pvp=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"FIND_MATCH\"){console.log(action.payload);var pvpNew={};pvpNew.status=action.payload.status;pvpNew.opponent=action.payload.opponentUser;pvpNew.gameId=action.payload.gameId;pvpNew.gameStatus=\"Begin\";return pvpNew;}if(action.type==\"END_PVP_GAME\"){var _pvpNew=_objectSpread({},pvp);_pvpNew.gameStatus=\"Finished\";_pvpNew.winner=action.payload.winner;return _pvpNew;}return pvp;};var updateScoresInPvp=function updateScoresInPvp(){var pvpScores=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;if(action.type==\"UPDATE_PVP_GAME_SCORES\"){console.log(\"updating cache \",action.payload.scores);var pvpScoresNew=action.payload.scores;return pvpScoresNew;}if(action.type==\"FIND_MATCH\"){return{};}return pvpScores;};var playerLeaderboardData=function playerLeaderboardData(){var oldData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;console.log(\"solver \",action.payload);if(action.type==\"LOAD_PLAYER_LEADERBOARDS_DATA\"){var newData={};newData.rank=action.payload.rank;newData.top=action.payload.top;newData.aboveAndBelow=action.payload.aboveAndBelow;newData.scores=action.payload.scores;return newData;}return oldData;};var loadActiveUsers=function loadActiveUsers(){var activeUsers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;console.log(\"load \",action.payload);if(action.type==\"LOAD_ACTIVE_USERS\"){return action.payload.activeUsers;}return activeUsers;};export default combineReducers({user:usersReducer,leaderboards:leaderboardsReducers,leaderboardsData:leaderboardsDataReducers,score:updateScore,errorMessage:showError,currencies:loadcurrencies,balances:loadBalances,form:formReducer,pvp:findMatch,pvpScores:updateScoresInPvp,playerLeaderboard:playerLeaderboardData,activeUsers:loadActiveUsers});","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/reducers/index.js"],"names":["combineReducers","reducer","formReducer","usersReducer","oldUser","username","token","action","type","console","log","payload","leaderboardsReducers","leaderboards","leaderboardsDataReducers","leaderboardDetails","addLeaderboard","leaderboardDetailsTemp","length","map","leaderboard","leaderboardName","leaderboardId","data","leaderboardsData","obj","updateScore","score","showError","errorMessage","errorMessageTemp","message","loadcurrencies","currencies","currenciesTemp","loadBalances","balances","findMatch","pvp","pvpNew","status","opponent","opponentUser","gameId","gameStatus","winner","updateScoresInPvp","pvpScores","scores","pvpScoresNew","playerLeaderboardData","oldData","newData","rank","top","aboveAndBelow","loadActiveUsers","activeUsers","user","form","playerLeaderboard"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\n\nconst usersReducer = (oldUser = { username :\"\", token:\"\" }, action) => {\n    if(action.type == \"SAVE_USER\"){\n        console.log(\"userreducer\",action)\n        return {\n            username : action.payload.username,\n            token: action.payload.token\n        }\n    }\n\n    if(action.type == \"CLEAR_USER\"){\n        return {}\n    }\n\n    return oldUser\n}\n\n\nconst leaderboardsReducers = (leaderboards=[], action) => {\n    if(action.type == \"LOAD_LEADERBOARDS\"){\n        return action.payload.leaderboards\n    }\n\n    return leaderboards;\n}\n\nconst leaderboardsDataReducers = (leaderboardDetails =[], action) => {\n    let addLeaderboard = true;\n    if(action.type == \"LOAD_LEADERBOARDS_DATA\"){\n        let leaderboardDetailsTemp = []\n        if(leaderboardDetails.length > 0){\n            leaderboardDetails.map((leaderboard)=>{\n                if(leaderboard.leaderboardName === action.payload.leaderboardId ){\n                    console.log(\"update data\")\n                    addLeaderboard= false;\n                    leaderboard.data = action.payload.leaderboardsData;\n                }\n                leaderboardDetailsTemp = [... leaderboardDetailsTemp, leaderboard]\n                \n            })\n        }\n        if(addLeaderboard){\n            let obj = {\n                leaderboardName : action.payload.leaderboardId,\n                data : action.payload.leaderboardsData\n            }\n            leaderboardDetailsTemp = [... leaderboardDetailsTemp, obj]\n        }\n        \n        \n        \n        return leaderboardDetailsTemp\n    }\n\n    return leaderboardDetails;\n}\n\nconst updateScore = (score=0, action) => {\n    if(action.type == \"UPDATE_SCORE\"){\n        console.log(\"update\",action.payload.score)\n        return action.payload.score\n    }\n    return score\n\n}\n\nconst showError = ( errorMessage = \"\", action) => {\n    if(action.type == \"SHOW_SCORE_ERROR\"){\n        let errorMessageTemp = action.payload.message\n        return errorMessageTemp\n    }\n    return errorMessage;\n}\n\nconst loadcurrencies = ( currencies=[], action) => {\n    if(action.type == \"LOAD_CURRENCIES\"){\n        let currenciesTemp = action.payload.currencies\n        return currenciesTemp\n    }\n\n    return currencies;\n}\n\nconst loadBalances = (balances=[], action) => {\n    if(action.type == \"LOAD_BALANCES\"){\n        let balances = action.payload.balances\n        return balances\n    }\n\n    return balances\n}\n\nconst findMatch = (pvp = {}, action) => {\n    if(action.type == \"FIND_MATCH\"){\n        console.log(action.payload)\n        let pvpNew = {}\n        pvpNew.status = action.payload.status\n        pvpNew.opponent = action.payload.opponentUser\n        pvpNew.gameId = action.payload.gameId\n        pvpNew.gameStatus = \"Begin\"\n        return pvpNew\n    }\n\n    if(action.type == \"END_PVP_GAME\"){\n        let pvpNew = {...pvp}\n        pvpNew.gameStatus = \"Finished\"\n        pvpNew.winner = action.payload.winner\n        return pvpNew\n    }\n\n    return pvp\n}\n\nconst updateScoresInPvp = (pvpScores={}, action) => {\n    if(action.type == \"UPDATE_PVP_GAME_SCORES\"){\n        console.log(\"updating cache \",action.payload.scores)\n        let pvpScoresNew = action.payload.scores\n        return pvpScoresNew;\n    }\n\n    if(action.type == \"FIND_MATCH\"){\n        return {}\n    }\n\n    return pvpScores\n}\n\nconst playerLeaderboardData = (oldData = {}, action) => {\n    console.log(\"solver \",action.payload)\n    if(action.type == \"LOAD_PLAYER_LEADERBOARDS_DATA\"){\n        let newData = {};\n        newData.rank = action.payload.rank\n        newData.top = action.payload.top\n        newData.aboveAndBelow = action.payload.aboveAndBelow\n        newData.scores = action.payload.scores\n        return newData\n    }\n    return oldData;\n}\n\nconst loadActiveUsers = (activeUsers=[], action) => {\n    console.log(\"load \",action.payload)\n    if(action.type == \"LOAD_ACTIVE_USERS\"){\n        return action.payload.activeUsers\n    }\n    return activeUsers\n}\n\nexport default combineReducers({\n    user: usersReducer,\n    leaderboards : leaderboardsReducers,\n    leaderboardsData : leaderboardsDataReducers,\n    score : updateScore,\n    errorMessage : showError,\n    currencies : loadcurrencies,\n    balances : loadBalances,\n    form : formReducer,\n    pvp : findMatch,\n    pvpScores : updateScoresInPvp,\n    playerLeaderboard : playerLeaderboardData,\n    activeUsers : loadActiveUsers\n})"]},"metadata":{},"sourceType":"module"}