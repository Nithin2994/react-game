{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver.js';\nimport LeaderboardTable from './leaderboardTable.js';\n\nclass LeaderboardView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      leaderboardEntries: [],\n      playerScores: {}\n    };\n\n    this.loadLeaderboard = async () => {\n      const response = await gameserver.get('/leaderboard/' + this.props.leaderboardName);\n      const arr = [];\n      var i = 0;\n      response.data.subLeaderboards.map(lb => {\n        arr[i++] = response.data.players[lb];\n      });\n      this.setState({\n        leaderboardEntries: arr,\n        playerScores: response.data.details\n      });\n      console.log(arr);\n    };\n  }\n\n  componentWillUpdate() {\n    this.loadLeaderboard();\n  }\n\n  render() {\n    var i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leaderboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Leaderboard Name : \", this.props.leaderboardName), this.state.leaderboardEntries.map(lb => {\n      return /*#__PURE__*/React.createElement(LeaderboardTable, {\n        key: i++,\n        instance: i++,\n        players: lb,\n        playerScores: this.state.playerScores,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}\n\nexport default LeaderboardView;","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js"],"names":["React","gameserver","LeaderboardTable","LeaderboardView","Component","state","leaderboardEntries","playerScores","loadLeaderboard","response","get","props","leaderboardName","arr","i","data","subLeaderboards","map","lb","players","setState","details","console","log","componentWillUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AAAEC,MAAAA,kBAAkB,EAAE,EAAtB;AAA2BC,MAAAA,YAAY,EAAE;AAAzC,KAFiC;;AAAA,SASxCC,eATwC,GAStB,YAAY;AAC3B,YAAMC,QAAQ,GAAI,MAAMR,UAAU,CAACS,GAAX,CAAe,kBAAgB,KAAKC,KAAL,CAAWC,eAA1C,CAAxB;AACA,YAAMC,GAAG,GAAG,EAAZ;AACA,UAAIC,CAAC,GAAE,CAAP;AACAL,MAAAA,QAAQ,CAACM,IAAT,CAAcC,eAAd,CAA8BC,GAA9B,CAAmCC,EAAD,IAAM;AACpCL,QAAAA,GAAG,CAACC,CAAC,EAAF,CAAH,GAAWL,QAAQ,CAACM,IAAT,CAAcI,OAAd,CAAsBD,EAAtB,CAAX;AACH,OAFD;AAGA,WAAKE,QAAL,CAAc;AACVd,QAAAA,kBAAkB,EAAGO,GADX;AAEVN,QAAAA,YAAY,EAAGE,QAAQ,CAACM,IAAT,CAAcM;AAFnB,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACH,KArBwC;AAAA;;AAKzCW,EAAAA,mBAAmB,GAAE;AACjB,SAAKhB,eAAL;AACH;;AAgBDiB,EAAAA,MAAM,GAAE;AACJ,QAAIX,CAAC,GAAE,CAAP;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKH,KAAL,CAAWC,eAAnC,CADJ,EAGI,KAAKP,KAAL,CAAWC,kBAAX,CAA8BW,GAA9B,CAAmCC,EAAD,IAAM;AACpC,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEJ,CAAC,EAAxB;AAA4B,QAAA,QAAQ,EAAEA,CAAC,EAAvC;AAA2C,QAAA,OAAO,EAAEI,EAApD;AAAwD,QAAA,YAAY,EAAE,KAAKb,KAAL,CAAWE,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFH,CAHJ,CADJ;AAUH;;AAnCwC;;AAsC7C,eAAeJ,eAAf","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver.js'\nimport LeaderboardTable from './leaderboardTable.js'\n\nclass LeaderboardView extends React.Component{\n\n    state = { leaderboardEntries :[] , playerScores :{}}\n\n\n    componentWillUpdate(){\n        this.loadLeaderboard();\n    }\n\n     loadLeaderboard = async () => {\n        const response =  await gameserver.get('/leaderboard/'+this.props.leaderboardName)\n        const arr = []\n        var i =0;\n        response.data.subLeaderboards.map((lb)=>{\n            arr[i++] = response.data.players[lb]\n        })\n        this.setState({\n            leaderboardEntries : arr,\n            playerScores : response.data.details\n        })\n        console.log(arr)\n    }\n\n    render(){\n        var i =0;\n        return(\n            <div className={\"leaderboard\"}>\n                <h2>Leaderboard Name : {this.props.leaderboardName}</h2>\n                { \n                this.state.leaderboardEntries.map((lb)=>{\n                    return <LeaderboardTable key={i++} instance={i++} players={lb} playerScores={this.state.playerScores}/>\n                  })\n                }\n            </div>\n        )\n    }\n}\n\nexport default LeaderboardView;"]},"metadata":{},"sourceType":"module"}