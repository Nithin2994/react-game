{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver.js';\nimport LeaderboardTable from './leaderboardTable.js';\n\nclass LeaderboardView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      leaderboardEntries: []\n    };\n\n    this.loadLeaderboard = async () => {\n      const response = await gameserver.get('/leaderboard/Test');\n      const arr = [];\n      var i = 0;\n      response.data.subLeaderboards.map(lb => {\n        arr[i++] = response.data.players[lb];\n      });\n      this.setState({\n        leaderboardEntries: arr\n      });\n      console.log(arr);\n    };\n\n    const _response = gameserver.get('/leaderboard/Test');\n\n    console.log(_response);\n  }\n\n  getLeaderboards() {}\n\n  render() {\n    const i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.loadLeaderboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"LOAD LEADERBOARDS\"), this.state.leaderboardEntries.map(lb => {\n      return /*#__PURE__*/React.createElement(LeaderboardTable, {\n        instance: i++,\n        players: lb,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }\n      });\n    }));\n  }\n\n}\n\nexport default LeaderboardView;","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js"],"names":["React","gameserver","LeaderboardTable","LeaderboardView","Component","constructor","state","leaderboardEntries","loadLeaderboard","response","get","arr","i","data","subLeaderboards","map","lb","players","setState","console","log","getLeaderboards","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA6C;AAIzCC,EAAAA,WAAW,GAAE;AACT;AADS,SAFbC,KAEa,GAFL;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAEK;;AAAA,SAOZC,eAPY,GAOM,YAAY;AAC3B,YAAMC,QAAQ,GAAI,MAAMR,UAAU,CAACS,GAAX,CAAe,mBAAf,CAAxB;AACA,YAAMC,GAAG,GAAG,EAAZ;AACA,UAAIC,CAAC,GAAE,CAAP;AACAH,MAAAA,QAAQ,CAACI,IAAT,CAAcC,eAAd,CAA8BC,GAA9B,CAAmCC,EAAD,IAAM;AACpCL,QAAAA,GAAG,CAACC,CAAC,EAAF,CAAH,GAAWH,QAAQ,CAACI,IAAT,CAAcI,OAAd,CAAsBD,EAAtB,CAAX;AACH,OAFD;AAGA,WAAKE,QAAL,CAAc;AACVX,QAAAA,kBAAkB,EAAGI;AADX,OAAd;AAGAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACH,KAlBY;;AAET,UAAMF,SAAQ,GAAGR,UAAU,CAACS,GAAX,CAAe,mBAAf,CAAjB;;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEH;;AAeDY,EAAAA,eAAe,GAAE,CAEhB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAMV,CAAC,GAAE,CAAT;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAIK,KAAKF,KAAL,CAAWC,kBAAX,CAA8BQ,GAA9B,CAAmCC,EAAD,IAAM;AACtC,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEJ,CAAC,EAA7B;AAAiC,QAAA,OAAO,EAAEI,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,CAJL,CADJ;AAWH;;AAzCwC;;AA4C7C,eAAeb,eAAf","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver.js'\nimport LeaderboardTable from './leaderboardTable.js'\n\nclass LeaderboardView extends React.Component{\n\n    state = { leaderboardEntries :[] }\n\n    constructor(){\n        super()\n        const response = gameserver.get('/leaderboard/Test')\n        console.log(response)\n\n    }\n\n     loadLeaderboard = async () => {\n        const response =  await gameserver.get('/leaderboard/Test')\n        const arr = []\n        var i =0;\n        response.data.subLeaderboards.map((lb)=>{\n            arr[i++] = response.data.players[lb]\n        })\n        this.setState({\n            leaderboardEntries : arr\n        })\n        console.log(arr)\n    }\n\n    getLeaderboards(){\n        \n    }\n\n    render(){\n        const i =0;\n        return(\n            <div>\n                <button onClick={this.loadLeaderboard}>LOAD LEADERBOARDS</button>\n                {\n                \n                 this.state.leaderboardEntries.map((lb)=>{\n                   return <LeaderboardTable instance={i++} players={lb}/>\n                 })\n                 }\n            </div>\n        )\n    }\n}\n\nexport default LeaderboardView;"]},"metadata":{},"sourceType":"module"}