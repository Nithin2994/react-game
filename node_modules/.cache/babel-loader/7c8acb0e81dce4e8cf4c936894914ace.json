{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadLeaderboardData } from '../actions/useraction';\nimport LeaderboardTable from './leaderboardTable';\n\nclass LeaderboardView extends React.Component {\n  componentDidMount() {\n    this.interval = setInterval(() => this.props.loadLeaderboardData(this.props.leaderboardName), 1000);\n  }\n\n  render() {\n    var i = 0;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"leaderboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Leaderboard : \", this.props.leaderboardName), /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.leaderboardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, console.log(this.props.leaderboardsData.Test1), this.props.leaderboardsData != null && this.props.leaderboardsData.map(lb => {\n      return lb.leaderboardName === this.props.leaderboardName && lb.data.subLeaderboards.map(lbname => {\n        const players = lb.data.players[lbname];\n        return /*#__PURE__*/React.createElement(LeaderboardTable, {\n          instance: lbname,\n          players: players,\n          playerScores: lb.data.details,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 26\n          }\n        });\n      });\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leaderboardsData: state.leaderboardsData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadLeaderboardData\n})(LeaderboardView);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js"],"names":["React","connect","loadLeaderboardData","LeaderboardTable","LeaderboardView","Component","componentDidMount","interval","setInterval","props","leaderboardName","render","i","console","log","leaderboardsData","Test1","map","lb","data","subLeaderboards","lbname","players","details","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAGA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA6C;AAEzCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKC,KAAL,CAAWP,mBAAX,CAA+B,KAAKO,KAAL,CAAWC,eAA1C,CAAP,EAAmE,IAAnE,CAA3B;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,CAAC,GAAE,CAAP;AACA,wBACI;AAAM,MAAA,SAAS,EAAE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKH,KAAL,CAAWC,eAA9B,CAFJ,eAGI;AAAK,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,gBAAX,CAA4BC,KAAxC,CADL,EAGC,KAAKP,KAAL,CAAWM,gBAAX,IAA+B,IAAhC,IACA,KAAKN,KAAL,CAAWM,gBAAX,CAA4BE,GAA5B,CAAiCC,EAAD,IAAO;AACtC,aAAOA,EAAE,CAACR,eAAH,KAAuB,KAAKD,KAAL,CAAWC,eAAlC,IACPQ,EAAE,CAACC,IAAH,CAAQC,eAAR,CAAwBH,GAAxB,CAA6BI,MAAD,IAAW;AACpC,cAAMC,OAAO,GAAGJ,EAAE,CAACC,IAAH,CAAQG,OAAR,CAAgBD,MAAhB,CAAhB;AACF,4BAAO,oBAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAEA,MAA5B;AAAoC,UAAA,OAAO,EAAEC,OAA7C;AAAsD,UAAA,YAAY,EAAEJ,EAAE,CAACC,IAAH,CAAQI,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,OAHD,CADA;AAKA,KAND,CAJA,CAHJ,CADJ;AAoBH;;AA5BwC;;AA+B7C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,gBAAgB,EAAGU,KAAK,CAACV;AADtB,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAACuB,eAAD,EAAiB;AAACtB,EAAAA;AAAD,CAAjB,CAAP,CAA+CE,eAA/C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { loadLeaderboardData } from '../actions/useraction'\nimport LeaderboardTable from './leaderboardTable';\n\n\nclass LeaderboardView extends React.Component{\n\n    componentDidMount(){\n        this.interval = setInterval(() => this.props.loadLeaderboardData(this.props.leaderboardName), 1000);\n    }\n\n    render(){\n        var i =0;\n        return(\n            <span className={\"leaderboard\"}>\n                \n                <h2>Leaderboard : {this.props.leaderboardName}</h2>\n                <div id={this.props.leaderboardName}>\n                    {console.log(this.props.leaderboardsData.Test1)}\n                {\n                (this.props.leaderboardsData != null) &&\n                this.props.leaderboardsData.map((lb) =>{\n                 return lb.leaderboardName === this.props.leaderboardName && \n                 lb.data.subLeaderboards.map((lbname) =>{\n                    const players = lb.data.players[lbname] ;\n                  return <LeaderboardTable instance={lbname} players={players} playerScores={lb.data.details}/>\n                 })\n                })\n                }\n                </div>\n                \n            </span>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        leaderboardsData : state.leaderboardsData\n    }\n}\nexport default connect(mapStateToProps,{loadLeaderboardData})(LeaderboardView);"]},"metadata":{},"sourceType":"module"}