{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadCurrencies, loadBalances } from '../actions/useraction';\nimport gameserver from '../apis/gameserver';\nimport TransactionForm from './transactionFormComponent';\n\nclass Transaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: \"\"\n    };\n\n    this.handleSubmit = async (type, currency, amount) => {\n      if (type != \"NA\" && currency != \"NA\") {\n        const response = await gameserver.post(\"/wallet/\" + type, {\n          playerName: this.props.username,\n          amount: parseInt(amount),\n          currency: currency\n        }, {\n          headers: {\n            token: this.props.token\n          }\n        });\n        this.setState({\n          status: response.data.status\n        });\n        this.props.loadBalances(this.props.username, this.props.token);\n      } else {\n        alert(\"Select currency and type\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadCurrencies();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Transaction Type : \", this.props.name), /*#__PURE__*/React.createElement(TransactionForm, {\n      currencies: this.props.currencies,\n      transaction: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), this.state.status);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currencies: state.currencies,\n    username: state.user.username,\n    token: state.user.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCurrencies,\n  loadBalances\n})(Transaction);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js"],"names":["React","connect","loadCurrencies","loadBalances","gameserver","TransactionForm","Transaction","Component","state","status","handleSubmit","type","currency","amount","response","post","playerName","props","username","parseInt","headers","token","setState","data","alert","componentDidMount","render","name","currencies","mapStateToProps","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,uBAA3C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACJC,MAAAA,MAAM,EAAG;AADL,KAF6B;;AAAA,SAUrCC,YAVqC,GAUtB,OAAOC,IAAP,EAAYC,QAAZ,EAAqBC,MAArB,KAAgC;AAC3C,UAAGF,IAAI,IAAI,IAAR,IAAgBC,QAAQ,IAAI,IAA/B,EAAoC;AAChC,cAAME,QAAQ,GAAI,MAAMV,UAAU,CAACW,IAAX,CAAgB,aAAWJ,IAA3B,EAAgC;AACpDK,UAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,QAD6B;AAEpDL,UAAAA,MAAM,EAAEM,QAAQ,CAACN,MAAD,CAFoC;AAGpDD,UAAAA,QAAQ,EAAEA;AAH0C,SAAhC,EAItB;AACEQ,UAAAA,OAAO,EAAC;AACJC,YAAAA,KAAK,EAAG,KAAKJ,KAAL,CAAWI;AADf;AADV,SAJsB,CAAxB;AAUA,aAAKC,QAAL,CAAc;AACVb,UAAAA,MAAM,EAAGK,QAAQ,CAACS,IAAT,CAAcd;AADb,SAAd;AAIA,aAAKQ,KAAL,CAAWd,YAAX,CAAwB,KAAKc,KAAL,CAAWC,QAAnC,EAA4C,KAAKD,KAAL,CAAWI,KAAvD;AACH,OAhBD,MAgBK;AACDG,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH;AAEJ,KA/BoC;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAE;AACf,SAAKR,KAAL,CAAWf,cAAX;AACH;;AAyBDwB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKT,KAAL,CAAWU,IAAnC,CADG,eAEH,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UAAxC;AAAoD,MAAA,WAAW,EAAE,KAAKlB,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,EAsBF,KAAKF,KAAL,CAAWC,MAtBT,CAAP;AAwBH;;AA1DoC;;AA6DzC,MAAMoB,eAAe,GAAIrB,KAAD,IAAW;AAC/B,SAAO;AACHoB,IAAAA,UAAU,EAAGpB,KAAK,CAACoB,UADhB;AAEHV,IAAAA,QAAQ,EAAGV,KAAK,CAACsB,IAAN,CAAWZ,QAFnB;AAGHG,IAAAA,KAAK,EAAGb,KAAK,CAACsB,IAAN,CAAWT;AAHhB,GAAP;AAKH,CAND;;AAQA,eAAepB,OAAO,CAAC4B,eAAD,EAAiB;AAAC3B,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAjB,CAAP,CAAwDG,WAAxD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadCurrencies, loadBalances} from '../actions/useraction'\nimport gameserver from '../apis/gameserver'\nimport TransactionForm from './transactionFormComponent';\n\nclass Transaction extends React.Component{\n\n    state = {\n        status : \"\"\n    }\n\n    componentDidMount(){\n        this.props.loadCurrencies()\n    }\n\n    handleSubmit = async (type,currency,amount) => {\n        if(type != \"NA\" && currency != \"NA\"){\n            const response =  await gameserver.post(\"/wallet/\"+type,{\n                playerName: this.props.username,\n                amount: parseInt(amount),\n                currency: currency\n            },{\n                headers:{\n                    token : this.props.token\n                }\n            })\n    \n            this.setState({\n                status : response.data.status\n            })\n    \n            this.props.loadBalances(this.props.username,this.props.token)\n        }else{\n            alert(\"Select currency and type\")\n        }\n        \n    }\n\n    render(){\n        return <div>\n            <h2>Transaction Type : {this.props.name}</h2>\n            <TransactionForm currencies={this.props.currencies} transaction={this.handleSubmit}/> \n            {/* { <form>\n                <label >Amount </label> \n                <input type=\"number\" name=\"amount\" onChange={this.handleChange} /><br></br>\n                <label >Currency </label> \n                <select name=\"currency\" onChange={this.handleChange}>\n                    <option value=\"NA\">-select-</option>\n                {this.props.currencies != null  && this.props.currencies.map((currency)=>{\n                    return <option value={currency}>{currency}</option>\n                })}\n                    \n                </select><br></br>\n                <label >Transaction Type </label> \n                <select name=\"type\" onChange={this.handleChange}>\n                    <option value=\"NA\">-select-</option>\n                    <option value=\"debit\">debit</option>\n                    <option value=\"credit\">credit</option>\n                </select><br></br>\n                <button type=\"button\" onClick={this.handleSubmit}>submit</button>\n            </form> } */}\n            {this.state.status}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currencies : state.currencies,\n        username : state.user.username,\n        token : state.user.token\n    }\n}\n\nexport default connect(mapStateToProps,{loadCurrencies, loadBalances})(Transaction)"]},"metadata":{},"sourceType":"module"}