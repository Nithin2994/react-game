{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nconst usersReducer = (oldUser = {\n  username: \"\",\n  token: \"\"\n}, action) => {\n  if (action.type == \"SAVE_USER\") {\n    console.log(\"userreducer\", action);\n    return {\n      username: action.payload.username,\n      token: action.payload.token\n    };\n  }\n\n  if (action.type == \"CLEAR_USER\") {\n    return {};\n  }\n\n  return oldUser;\n};\n\nconst leaderboardsReducers = (leaderboards = [], action) => {\n  if (action.type == \"LOAD_LEADERBOARDS\") {\n    return action.payload.leaderboards;\n  }\n\n  return leaderboards;\n};\n\nconst leaderboardsDataReducers = (leaderboardDetails = [], action) => {\n  let addLeaderboard = true;\n\n  if (action.type == \"LOAD_LEADERBOARDS_DATA\") {\n    let leaderboardDetailsTemp = [];\n\n    if (leaderboardDetails.length > 0) {\n      leaderboardDetails.map(leaderboard => {\n        if (leaderboard.leaderboardName === action.payload.leaderboardId) {\n          console.log(\"update data\");\n          addLeaderboard = false;\n          leaderboard.data = action.payload.leaderboardsData;\n        }\n\n        leaderboardDetailsTemp = [...leaderboardDetailsTemp, leaderboard];\n      });\n    }\n\n    if (addLeaderboard) {\n      let obj = {\n        leaderboardName: action.payload.leaderboardId,\n        data: action.payload.leaderboardsData\n      };\n      leaderboardDetailsTemp = [...leaderboardDetailsTemp, obj];\n    }\n\n    return leaderboardDetailsTemp;\n  }\n\n  return leaderboardDetails;\n};\n\nconst updateScore = (score = 0, action) => {\n  if (action.type == \"UPDATE_SCORE\") {\n    console.log(\"update\", action.payload.score);\n    return action.payload.score;\n  }\n\n  return score;\n};\n\nconst showError = (errorMessage = \"\", action) => {\n  if (action.type == \"SHOW_SCORE_ERROR\") {\n    let errorMessageTemp = action.payload.message;\n    return errorMessageTemp;\n  }\n\n  return errorMessage;\n};\n\nconst loadcurrencies = (currencies = [], action) => {\n  if (action.type == \"LOAD_CURRENCIES\") {\n    let currenciesTemp = action.payload.currencies;\n    return currenciesTemp;\n  }\n\n  return currencies;\n};\n\nconst loadBalances = (balances = [], action) => {\n  if (action.type == \"LOAD_BALANCES\") {\n    let balances = action.payload.balances;\n    return balances;\n  }\n\n  return balances;\n};\n\nconst findMatch = (pvp = {}, action) => {\n  if (action.type == \"FIND_MATCH\") {\n    console.log(action.payload);\n    let pvpNew = {};\n    pvpNew.status = action.payload.status;\n    pvpNew.opponent = action.payload.opponentUser;\n    pvpNew.gameId = action.payload.gameId;\n    pvpNew.gameStatus = \"Begin\";\n    return pvpNew;\n  }\n\n  if (action.type == \"END_PVP_GAME\") {\n    let pvpNew = { ...pvp\n    };\n    pvpNew.gameStatus = \"Finished\";\n    pvpNew.winner = action.payload.winner;\n    return pvpNew;\n  }\n\n  return pvp;\n};\n\nconst updateScoresInPvp = (pvpScores = {}, action) => {\n  if (action.type == \"UPDATE_PVP_GAME_SCORES\") {\n    console.log(\"updating cache \", action.payload.scores);\n    let pvpScoresNew = action.payload.scores;\n    return pvpScoresNew;\n  }\n\n  if (action.type == \"FIND_MATCH\") {\n    return {};\n  }\n\n  return pvpScores;\n};\n\nconst playerLeaderboardData = (oldData = {}, action) => {\n  console.log(\"solver \", action.payload);\n\n  if (action.type == \"LOAD_PLAYER_LEADERBOARDS_DATA\") {\n    let newData = {};\n    newData.rank = action.payload.rank;\n    newData.top = action.payload.top;\n    newData.aboveAndBelow = action.payload.aboveAndBelow;\n    newData.scores = action.payload.scores;\n    return newData;\n  }\n\n  return oldData;\n};\n\nconst loadActiveUsers = (activeUsers = [], action) => {\n  if (action.type = \"LOAD_ACTIVE_USERS\") {\n    return action.payload.activeUsers;\n  }\n\n  return activeUsers;\n};\n\nexport default combineReducers({\n  user: usersReducer,\n  leaderboards: leaderboardsReducers,\n  leaderboardsData: leaderboardsDataReducers,\n  score: updateScore,\n  errorMessage: showError,\n  currencies: loadcurrencies,\n  balances: loadBalances,\n  form: formReducer,\n  pvp: findMatch,\n  pvpScores: updateScoresInPvp,\n  playerLeaderboard: playerLeaderboardData,\n  activeUsers: loadActiveUsers\n});","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/reducers/index.js"],"names":["combineReducers","reducer","formReducer","usersReducer","oldUser","username","token","action","type","console","log","payload","leaderboardsReducers","leaderboards","leaderboardsDataReducers","leaderboardDetails","addLeaderboard","leaderboardDetailsTemp","length","map","leaderboard","leaderboardName","leaderboardId","data","leaderboardsData","obj","updateScore","score","showError","errorMessage","errorMessageTemp","message","loadcurrencies","currencies","currenciesTemp","loadBalances","balances","findMatch","pvp","pvpNew","status","opponent","opponentUser","gameId","gameStatus","winner","updateScoresInPvp","pvpScores","scores","pvpScoresNew","playerLeaderboardData","oldData","newData","rank","top","aboveAndBelow","loadActiveUsers","activeUsers","user","form","playerLeaderboard"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\n\nconst usersReducer = (oldUser = { username :\"\", token:\"\" }, action) => {\n    if(action.type == \"SAVE_USER\"){\n        console.log(\"userreducer\",action)\n        return {\n            username : action.payload.username,\n            token: action.payload.token\n        }\n    }\n\n    if(action.type == \"CLEAR_USER\"){\n        return {}\n    }\n\n    return oldUser\n}\n\n\nconst leaderboardsReducers = (leaderboards=[], action) => {\n    if(action.type == \"LOAD_LEADERBOARDS\"){\n        return action.payload.leaderboards\n    }\n\n    return leaderboards;\n}\n\nconst leaderboardsDataReducers = (leaderboardDetails =[], action) => {\n    let addLeaderboard = true;\n    if(action.type == \"LOAD_LEADERBOARDS_DATA\"){\n        let leaderboardDetailsTemp = []\n        if(leaderboardDetails.length > 0){\n            leaderboardDetails.map((leaderboard)=>{\n                if(leaderboard.leaderboardName === action.payload.leaderboardId ){\n                    console.log(\"update data\")\n                    addLeaderboard= false;\n                    leaderboard.data = action.payload.leaderboardsData;\n                }\n                leaderboardDetailsTemp = [... leaderboardDetailsTemp, leaderboard]\n                \n            })\n        }\n        if(addLeaderboard){\n            let obj = {\n                leaderboardName : action.payload.leaderboardId,\n                data : action.payload.leaderboardsData\n            }\n            leaderboardDetailsTemp = [... leaderboardDetailsTemp, obj]\n        }\n        \n        \n        \n        return leaderboardDetailsTemp\n    }\n\n    return leaderboardDetails;\n}\n\nconst updateScore = (score=0, action) => {\n    if(action.type == \"UPDATE_SCORE\"){\n        console.log(\"update\",action.payload.score)\n        return action.payload.score\n    }\n    return score\n\n}\n\nconst showError = ( errorMessage = \"\", action) => {\n    if(action.type == \"SHOW_SCORE_ERROR\"){\n        let errorMessageTemp = action.payload.message\n        return errorMessageTemp\n    }\n    return errorMessage;\n}\n\nconst loadcurrencies = ( currencies=[], action) => {\n    if(action.type == \"LOAD_CURRENCIES\"){\n        let currenciesTemp = action.payload.currencies\n        return currenciesTemp\n    }\n\n    return currencies;\n}\n\nconst loadBalances = (balances=[], action) => {\n    if(action.type == \"LOAD_BALANCES\"){\n        let balances = action.payload.balances\n        return balances\n    }\n\n    return balances\n}\n\nconst findMatch = (pvp = {}, action) => {\n    if(action.type == \"FIND_MATCH\"){\n        console.log(action.payload)\n        let pvpNew = {}\n        pvpNew.status = action.payload.status\n        pvpNew.opponent = action.payload.opponentUser\n        pvpNew.gameId = action.payload.gameId\n        pvpNew.gameStatus = \"Begin\"\n        return pvpNew\n    }\n\n    if(action.type == \"END_PVP_GAME\"){\n        let pvpNew = {...pvp}\n        pvpNew.gameStatus = \"Finished\"\n        pvpNew.winner = action.payload.winner\n        return pvpNew\n    }\n\n    return pvp\n}\n\nconst updateScoresInPvp = (pvpScores={}, action) => {\n    if(action.type == \"UPDATE_PVP_GAME_SCORES\"){\n        console.log(\"updating cache \",action.payload.scores)\n        let pvpScoresNew = action.payload.scores\n        return pvpScoresNew;\n    }\n\n    if(action.type == \"FIND_MATCH\"){\n        return {}\n    }\n\n    return pvpScores\n}\n\nconst playerLeaderboardData = (oldData = {}, action) => {\n    console.log(\"solver \",action.payload)\n    if(action.type == \"LOAD_PLAYER_LEADERBOARDS_DATA\"){\n        let newData = {};\n        newData.rank = action.payload.rank\n        newData.top = action.payload.top\n        newData.aboveAndBelow = action.payload.aboveAndBelow\n        newData.scores = action.payload.scores\n        return newData\n    }\n    return oldData;\n}\n\nconst loadActiveUsers = (activeUsers=[], action) => {\n    if(action.type = \"LOAD_ACTIVE_USERS\"){\n        return action.payload.activeUsers\n    }\n    return activeUsers\n}\n\nexport default combineReducers({\n    user: usersReducer,\n    leaderboards : leaderboardsReducers,\n    leaderboardsData : leaderboardsDataReducers,\n    score : updateScore,\n    errorMessage : showError,\n    currencies : loadcurrencies,\n    balances : loadBalances,\n    form : formReducer,\n    pvp : findMatch,\n    pvpScores : updateScoresInPvp,\n    playerLeaderboard : playerLeaderboardData,\n    activeUsers : loadActiveUsers\n})"]},"metadata":{},"sourceType":"module"}