{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/transactionFormComponent.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass TransactionForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.transact = formValues => {\n      console.log(formValues);\n      this.props.transaction(formValues.type, formValues.currency, formValues.amount);\n    };\n  }\n\n  renderInput({\n    input,\n    type,\n    name,\n    lable,\n    meta\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, lable), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      type: type,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 46\n      }\n    }, meta.error) : \"\");\n  }\n\n  renderSelect(field) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, field.lable), /*#__PURE__*/React.createElement(\"select\", Object.assign({}, field.input, {\n      name: field.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }), field.children), field.meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 36\n      }\n    }, field.meta.error) : \"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.transact),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"amount\",\n      lable: \"Amount\",\n      component: this.renderInput,\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"currency\",\n      lable: \"Currency\",\n      component: this.renderSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"-select-\"), this.props.currencies != null && this.props.currencies.map(currency => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: currency,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }\n      }, currency);\n    })), /*#__PURE__*/React.createElement(Field, {\n      name: \"type\",\n      lable: \"TransactionType\",\n      component: this.renderSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"-select-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"debit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"debit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"credit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"credit\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.currency) {\n    errors.currency = \"Select currency\";\n  } else if (!formValues.type) {\n    errors.type = \"Select type\";\n  } else if (!formValues.amount || formValues.amount < 0) {\n    errors.amount = \"Enter amount greater than 0\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'Transaction',\n  validate\n})(TransactionForm);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/transactionFormComponent.js"],"names":["React","Field","reduxForm","TransactionForm","Component","transact","formValues","console","log","props","transaction","type","currency","amount","renderInput","input","name","lable","meta","touched","error","color","renderSelect","field","children","render","handleSubmit","currencies","map","validate","errors","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\n\nclass TransactionForm extends React.Component{\n\n    renderInput({input,type,name,lable,meta}){\n        return <div>\n            <label>{lable}</label>\n            <input {...input} type={type} name={name}/>\n            {( meta.touched && meta.error )? <div style={{color:\"red\"}}>{meta.error}</div> : \"\" } \n        </div>\n    }\n\n    renderSelect(field){\n        return <div>\n            <label>{field.lable}</label>\n            <select {...field.input} name={field.name}>\n                {field.children}\n            </select>\n            {( field.meta.error )? <div style={{color:\"red\"}}>{field.meta.error}</div> : \"\" } \n        </div>\n    }\n\n    transact = (formValues) => {\n        console.log(formValues)\n        this.props.transaction(formValues.type,formValues.currency,formValues.amount);\n    }\n\n    render(){\n        return <div>\n            <form onSubmit={this.props.handleSubmit(this.transact)}>\n            <Field name=\"amount\" lable=\"Amount\" component={this.renderInput} type=\"number\"></Field>\n            <Field name=\"currency\" lable=\"Currency\" component={this.renderSelect} >\n                <option value=\"NA\">-select-</option>\n                {\n                this.props.currencies != null  && this.props.currencies.map((currency)=>{\n                    return <option value={currency}>{currency}</option>\n                })\n                }\n            </Field>\n            <Field name=\"type\" lable=\"TransactionType\" component={this.renderSelect}>\n                    <option value=\"NA\">-select-</option>\n                    <option value=\"debit\">debit</option>\n                    <option value=\"credit\">credit</option>\n            </Field>\n            <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {}\n\n    if(!formValues.currency){\n        errors.currency = \"Select currency\"\n    }else if(!formValues.type){\n        errors.type = \"Select type\"\n    }else if(!formValues.amount || formValues.amount < 0){\n        errors.amount = \"Enter amount greater than 0\"\n    }\n    return errors\n}\n\nexport default reduxForm({\n    form : 'Transaction',\n    validate\n})(TransactionForm)"]},"metadata":{},"sourceType":"module"}