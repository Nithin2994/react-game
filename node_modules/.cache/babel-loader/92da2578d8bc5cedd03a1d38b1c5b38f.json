{"ast":null,"code":"import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Field,reduxForm}from'redux-form';import{Form,Button}from'react-bootstrap';var RegisterFormComponent=/*#__PURE__*/function(_React$Component){_inherits(RegisterFormComponent,_React$Component);var _super=_createSuper(RegisterFormComponent);function RegisterFormComponent(){var _this;_classCallCheck(this,RegisterFormComponent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.register=function(formValues){_this.props.onRegisterClick(formValues.username,formValues.password,formValues.email,formValues.mobileNo);};return _this;}_createClass(RegisterFormComponent,[{key:\"renderInput\",value:function renderInput(_ref){var input=_ref.input,lable=_ref.lable,type=_ref.type,meta=_ref.meta;return/*#__PURE__*/React.createElement(Form.Group,{controlId:lable},/*#__PURE__*/React.createElement(Form.Label,null,lable),/*#__PURE__*/React.createElement(Form.Control,Object.assign({},input,{type:type})),/*#__PURE__*/React.createElement(Form.Text,null,meta.touched&&meta.error?/*#__PURE__*/React.createElement(\"div\",{style:{color:\"red\"}},meta.error):\"\"));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Form,{onSubmit:this.props.handleSubmit(this.register)},/*#__PURE__*/React.createElement(Field,{name:\"username\",component:this.renderInput,lable:\"Username\",type:\"text\"}),/*#__PURE__*/React.createElement(Field,{name:\"password\",component:this.renderInput,lable:\"Password\",type:\"password\"}),/*#__PURE__*/React.createElement(Field,{name:\"repassword\",component:this.renderInput,lable:\"Re-Password\",type:\"password\"}),/*#__PURE__*/React.createElement(Field,{name:\"email\",component:this.renderInput,lable:\"Email\",type:\"email\"}),/*#__PURE__*/React.createElement(Field,{name:\"mobileNo\",component:this.renderInput,lable:\"Mobile No\",type:\"number\"}),/*#__PURE__*/React.createElement(Button,{block:true,style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},type:\"submit\"},\"Register\"));}}]);return RegisterFormComponent;}(React.Component);var validate=function validate(formValues){var errors={};if(!formValues.username){errors.username=\"Enter username\";}if(!formValues.password){errors.password=\"Enter password\";}if(!formValues.repassword){errors.repassword=\"Enter valid username\";}if(formValues.password!=formValues.repassword){errors.repassword=\"Not matching with password \";}return errors;};export default reduxForm({form:'RegisterForm',validate:validate})(RegisterFormComponent);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/registerFormComponent.js"],"names":["React","Field","reduxForm","Form","Button","RegisterFormComponent","register","formValues","props","onRegisterClick","username","password","email","mobileNo","input","lable","type","meta","touched","error","color","handleSubmit","renderInput","backgroundColor","border","Component","validate","errors","repassword","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm} from 'redux-form'\nimport { Form, Button} from 'react-bootstrap'\n\nclass RegisterFormComponent extends React.Component{\n\n    renderInput({input, lable, type, meta}){\n        return <Form.Group controlId={lable}>\n                <Form.Label>{lable}</Form.Label>\n                <Form.Control {...input} type={type} />\n                <Form.Text>\n                {\n                    meta.touched && meta.error ? <div style={{color:\"red\"}}>{meta.error}</div> : \"\" \n                }\n                </Form.Text>\n            </Form.Group>\n        \n    }\n\n    register = (formValues) => {\n        this.props.onRegisterClick(formValues.username,formValues.password,formValues.email,formValues.mobileNo);\n    }\n\n    render(){\n        return (\n                <Form onSubmit={this.props.handleSubmit(this.register)}>\n                    <Field name=\"username\" component={this.renderInput} lable=\"Username\" type=\"text\"/>\n                    <Field name=\"password\" component={this.renderInput} lable=\"Password\" type=\"password\"/>\n                    <Field name=\"repassword\" component={this.renderInput} lable=\"Re-Password\" type=\"password\"/>\n                    <Field name=\"email\" component={this.renderInput} lable=\"Email\" type=\"email\"/>\n                    <Field name=\"mobileNo\" component={this.renderInput} lable=\"Mobile No\" type=\"number\"/>\n                    <Button block style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} type=\"submit\" >Register</Button>\n                </Form>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const errors= {}\n    if(!formValues.username){\n        errors.username = \"Enter username\"\n    }\n    if(!formValues.password){\n        errors.password = \"Enter password\"\n    }\n    if(!formValues.repassword){\n        errors.repassword = \"Enter valid username\"\n    }\n    if(formValues.password != formValues.repassword) {\n        errors.repassword = \"Not matching with password \"\n    }\n\n    return errors\n}\nexport default reduxForm({\n    form : 'RegisterForm',\n    validate : validate\n})(RegisterFormComponent)"]},"metadata":{},"sourceType":"module"}