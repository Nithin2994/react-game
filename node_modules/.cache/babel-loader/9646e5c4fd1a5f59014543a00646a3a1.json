{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{updateScore,loadLeaderboards}from'../actions/useraction';import GameForm from'./gameFormComponent';var GameConatiner=/*#__PURE__*/function(_React$Component){_inherits(GameConatiner,_React$Component);var _super=_createSuper(GameConatiner);function GameConatiner(){var _this;_classCallCheck(this,GameConatiner);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.submitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(leaderboardId){var random;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:random=Math.round(Math.random())*10+Math.round(Math.random())*20;_this.props.updateScore(leaderboardId,_this.props.username,random);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}_createClass(GameConatiner,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.loadLeaderboards();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(GameForm,{leaderboards:this.props.leaderboards,generateScore:this.submitHandler}),this.props.errorMessage!=\"\"?this.props.errorMessage:\"\",\"Your current game score : \",this.props.score);}}]);return GameConatiner;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{username:state.user.username,token:state.user.token,leaderboards:state.leaderboards,score:state.score,errorMessage:state.errorMessage};};export default connect(mapStateToProps,{updateScore:updateScore,loadLeaderboards:loadLeaderboards})(GameConatiner);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/game.js"],"names":["React","connect","updateScore","loadLeaderboards","GameForm","GameConatiner","submitHandler","leaderboardId","random","Math","round","props","username","leaderboards","errorMessage","score","Component","mapStateToProps","state","user","token"],"mappings":"i9BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA6C,uBAA7C,CAEA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,C,GACMC,CAAAA,a,mWAMFC,a,0FAAgB,iBAAOC,aAAP,6HACJC,MADI,CACMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,EAA4B,EAA7B,CAAoCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,EAA4B,EADrE,CAER,MAAKG,KAAL,CAAWT,WAAX,CAAuBK,aAAvB,CAAqC,MAAKI,KAAL,CAAWC,QAAhD,CAAyDJ,MAAzD,EAFQ,sD,oKAJG,CACf,KAAKG,KAAL,CAAWR,gBAAX,GACH,C,uCAOO,CACJ,mBAAO,4CACH,oBAAC,QAAD,EAAU,YAAY,CAAE,KAAKQ,KAAL,CAAWE,YAAnC,CAAiD,aAAa,CAAE,KAAKP,aAArE,EADG,CAED,KAAKK,KAAL,CAAWG,YAAX,EAA2B,EAA3B,CAAgC,KAAKH,KAAL,CAAWG,YAA3C,CAA0D,EAFzD,8BAGwB,KAAKH,KAAL,CAAWI,KAHnC,CAAP,CAKH,C,2BAjBuBf,KAAK,CAACgB,S,EAoBlC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHN,QAAQ,CAAGM,KAAK,CAACC,IAAN,CAAWP,QADnB,CAEHQ,KAAK,CAAGF,KAAK,CAACC,IAAN,CAAWC,KAFhB,CAGHP,YAAY,CAAGK,KAAK,CAACL,YAHlB,CAIHE,KAAK,CAAGG,KAAK,CAACH,KAJX,CAKHD,YAAY,CAAGI,KAAK,CAACJ,YALlB,CAAP,CAOH,CARD,CAUA,cAAeb,CAAAA,OAAO,CAACgB,eAAD,CAAiB,CAACf,WAAW,CAAXA,WAAD,CAAaC,gBAAgB,CAAhBA,gBAAb,CAAjB,CAAP,CAAwDE,aAAxD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { updateScore, loadLeaderboards} from '../actions/useraction'\n\nimport GameForm from './gameFormComponent'\nclass GameConatiner extends React.Component{\n\n    componentDidMount(){\n        this.props.loadLeaderboards();\n    }\n\n    submitHandler = async (leaderboardId) => {\n            let random = (Math.round(Math.random()) * 10) + (Math.round(Math.random()) * 20)\n            this.props.updateScore(leaderboardId,this.props.username,random)\n    }\n\n    render(){\n        return <div>\n            <GameForm leaderboards={this.props.leaderboards} generateScore={this.submitHandler}/>\n            { this.props.errorMessage != \"\" ? this.props.errorMessage : \"\"}\n            Your current game score : {this.props.score}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username : state.user.username,\n        token : state.user.token,\n        leaderboards : state.leaderboards,\n        score : state.score,\n        errorMessage : state.errorMessage\n    }\n}\n\nexport default connect(mapStateToProps,{updateScore,loadLeaderboards})(GameConatiner)"]},"metadata":{},"sourceType":"module"}