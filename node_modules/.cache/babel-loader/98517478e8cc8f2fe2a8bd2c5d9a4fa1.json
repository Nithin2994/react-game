{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/gameFormComponent.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, Button } from 'react-bootstrap';\n\nclass GameForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.generateScore = formValues => {\n      this.props.generateScore(formValues.leaderboardId);\n    };\n  }\n\n  renderInput({\n    input,\n    type,\n    name,\n    lable,\n    meta\n  }) {\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, lable), /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, input, {\n      type: type,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 46\n      }\n    }, meta.error) : \"\"));\n  }\n\n  renderSelect(field) {\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, field.lable), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n      as: \"select\"\n    }, field.input, {\n      name: field.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), field.children), /*#__PURE__*/React.createElement(Form.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, field.meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 36\n      }\n    }, field.meta.error) : \"\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.handleSubmit(this.generateScore),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"leaderboardId\",\n      lable: \"LeaderboardId\",\n      component: this.renderSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"--Select--\"), this.props.leaderboards != null && this.props.leaderboards.map(lb => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: lb,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }\n      }, lb);\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Click here for score\")));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.leaderboardId || formValues.leaderboardId == \"NA\") {\n    errors.leaderboardId = \"Select leaderboard\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'Game',\n  validate\n})(GameForm);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/gameFormComponent.js"],"names":["React","Field","reduxForm","Form","Button","GameForm","Component","generateScore","formValues","props","leaderboardId","renderInput","input","type","name","lable","meta","touched","error","color","renderSelect","field","children","render","handleSubmit","leaderboards","map","lb","validate","errors","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport {Form, Button} from 'react-bootstrap'\n\nclass GameForm extends React.Component{\n\n    renderInput({input,type,name,lable,meta}){\n        return <Form.Group>\n            <Form.Label>{lable}</Form.Label>\n            <Form.Control {...input} type={type} name={name}/>\n            <Form.Text>\n            {( meta.touched && meta.error )? <div style={{color:\"red\"}}>{meta.error}</div> : \"\" } \n            </Form.Text>\n        </Form.Group>\n    }\n\n    renderSelect(field){\n        return <Form.Group>\n            <Form.Label>{field.lable}</Form.Label>\n            <Form.Control as=\"select\" {...field.input} name={field.name}>\n                {field.children}\n            </Form.Control>\n            <Form.Text>\n            {( field.meta.error )? <div style={{color:\"red\"}}>{field.meta.error}</div> : \"\" } \n            </Form.Text>\n        </Form.Group>\n    }\n\n    generateScore = (formValues) =>{\n        this.props.generateScore(formValues.leaderboardId)\n    }\n\n    render(){\n        return <div>\n            <Form onSubmit={this.props.handleSubmit(this.generateScore)}>\n                <Field name=\"leaderboardId\" lable=\"LeaderboardId\" component={this.renderSelect}>\n                    <option value=\"NA\">--Select--</option>\n                    {\n                        this.props.leaderboards != null && this.props.leaderboards.map((lb) => {\n                            return <option key={lb}>{lb}</option>\n                        })\n                    }\n            </Field>\n            <Button type=\"submit\">Click here for score</Button>\n            </Form>\n            \n        </div>\n    }\n}\n\nconst validate = (formValues) => {\n    const errors ={}\n    if(!formValues.leaderboardId || formValues.leaderboardId == \"NA\"){\n        errors.leaderboardId = \"Select leaderboard\"\n    }\n    return errors\n}\n\nexport default reduxForm({\n    form : 'Game',\n    validate\n})(GameForm)"]},"metadata":{},"sourceType":"module"}