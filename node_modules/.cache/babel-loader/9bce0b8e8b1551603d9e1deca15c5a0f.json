{"ast":null,"code":"import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{loadLeaderboardData}from'../actions/useraction';import LeaderboardTable from'./leaderboardTable';import{Carousel}from'react-bootstrap';var LeaderboardView=/*#__PURE__*/function(_React$Component){_inherits(LeaderboardView,_React$Component);var _super=_createSuper(LeaderboardView);function LeaderboardView(){var _this;_classCallCheck(this,LeaderboardView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={index:0};_this.handleSelect=function(selectedIndex,e){_this.setState({index:selectedIndex});};return _this;}_createClass(LeaderboardView,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.interval=setInterval(function(){return _this2.props.loadLeaderboardData(_this2.props.leaderboardName);},5000);}},{key:\"render\",value:function render(){var _this3=this;var i=0;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,this.props.leaderboardName),/*#__PURE__*/React.createElement(Carousel,{activeIndex:this.state.index,onSelect:this.handleSelect},this.props.leaderboardsData!=null&&this.props.leaderboardsData.map(function(lb){return lb.leaderboardName===_this3.props.leaderboardName&&lb.data.subLeaderboards.map(function(lbname){var players=lb.data.players[lbname];return/*#__PURE__*/React.createElement(Carousel.Item,null,\"Hello\",lbname,/*#__PURE__*/React.createElement(LeaderboardTable,{instance:lbname,players:players,playerScores:lb.data.details}));});})));}}]);return LeaderboardView;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{leaderboardsData:state.leaderboardsData};};export default connect(mapStateToProps,{loadLeaderboardData:loadLeaderboardData})(LeaderboardView);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/leaderboard.js"],"names":["React","connect","loadLeaderboardData","LeaderboardTable","Carousel","LeaderboardView","state","index","handleSelect","selectedIndex","e","setState","interval","setInterval","props","leaderboardName","i","leaderboardsData","map","lb","data","subLeaderboards","lbname","players","details","Component","mapStateToProps"],"mappings":"woBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,mBAAT,KAAoC,uBAApC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAAQC,QAAR,KAAuB,iBAAvB,C,GAGMC,CAAAA,e,2WAEFC,K,CAAQ,CAAEC,KAAK,CAAG,CAAV,C,OAKRC,Y,CAAe,SAACC,aAAD,CAAgBC,CAAhB,CAAsB,CACjC,MAAKC,QAAL,CAAc,CACVJ,KAAK,CAAGE,aADE,CAAd,EAGD,C,wGARgB,iBACf,KAAKG,QAAL,CAAgBC,WAAW,CAAC,iBAAM,CAAA,MAAI,CAACC,KAAL,CAAWZ,mBAAX,CAA+B,MAAI,CAACY,KAAL,CAAWC,eAA1C,CAAN,EAAD,CAAmE,IAAnE,CAA3B,CACH,C,uCAQO,iBACJ,GAAIC,CAAAA,CAAC,CAAE,CAAP,CACA,mBACI,4CACI,8BAAK,KAAKF,KAAL,CAAWC,eAAhB,CADJ,cAIA,oBAAC,QAAD,EAAU,WAAW,CAAE,KAAKT,KAAL,CAAWC,KAAlC,CAAyC,QAAQ,CAAE,KAAKC,YAAxD,EAGK,KAAKM,KAAL,CAAWG,gBAAX,EAA+B,IAAhC,EACA,KAAKH,KAAL,CAAWG,gBAAX,CAA4BC,GAA5B,CAAgC,SAACC,EAAD,CAAO,CACnC,MAAQA,CAAAA,EAAE,CAACJ,eAAH,GAAuB,MAAI,CAACD,KAAL,CAAWC,eAAlC,EACJI,EAAE,CAACC,IAAH,CAAQC,eAAR,CAAwBH,GAAxB,CAA4B,SAACI,MAAD,CAAW,CACnC,GAAMC,CAAAA,OAAO,CAAGJ,EAAE,CAACC,IAAH,CAAQG,OAAR,CAAgBD,MAAhB,CAAhB,CACA,mBAAO,oBAAC,QAAD,CAAU,IAAV,cACGA,MADH,cAEH,oBAAC,gBAAD,EAAkB,QAAQ,CAAEA,MAA5B,CAAoC,OAAO,CAAEC,OAA7C,CAAsD,YAAY,CAAEJ,EAAE,CAACC,IAAH,CAAQI,OAA5E,EAFG,CAAP,CAIH,CAND,CADJ,CAQC,CATL,CAJJ,CAJA,CADJ,CAuBH,C,6BAtCyBxB,KAAK,CAACyB,S,EAyCpC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACpB,KAAD,CAAW,CAC/B,MAAO,CACHW,gBAAgB,CAAGX,KAAK,CAACW,gBADtB,CAAP,CAGH,CAJD,CAKA,cAAehB,CAAAA,OAAO,CAACyB,eAAD,CAAiB,CAACxB,mBAAmB,CAAnBA,mBAAD,CAAjB,CAAP,CAA+CG,eAA/C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { loadLeaderboardData } from '../actions/useraction'\nimport LeaderboardTable from './leaderboardTable';\nimport {Carousel} from 'react-bootstrap'\n\n\nclass LeaderboardView extends React.Component{\n\n    state = { index : 0}\n    componentDidMount(){\n        this.interval = setInterval(() => this.props.loadLeaderboardData(this.props.leaderboardName), 5000);\n    }\n\n    handleSelect = (selectedIndex, e) => {\n        this.setState({\n            index : selectedIndex\n        })\n      };\n\n    render(){\n        var i =0;\n        return(\n            <div>\n                <h2>{this.props.leaderboardName}</h2>\n            \n            \n            <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n                \n                {\n                (this.props.leaderboardsData != null) &&\n                this.props.leaderboardsData.map((lb) =>{\n                    return  lb.leaderboardName === this.props.leaderboardName && \n                        lb.data.subLeaderboards.map((lbname) =>{\n                            const players = lb.data.players[lbname] ;\n                            return <Carousel.Item>\n                                Hello{lbname}\n                                <LeaderboardTable instance={lbname} players={players} playerScores={lb.data.details}/>\n                                </Carousel.Item>\n                        })\n                    })\n                }\n            </Carousel>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        leaderboardsData : state.leaderboardsData\n    }\n}\nexport default connect(mapStateToProps,{loadLeaderboardData})(LeaderboardView);"]},"metadata":{},"sourceType":"module"}