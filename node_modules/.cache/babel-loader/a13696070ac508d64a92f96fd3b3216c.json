{"ast":null,"code":"import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Field,reduxForm}from'redux-form';import{Form,Button,Table}from'react-bootstrap';var GameForm=/*#__PURE__*/function(_React$Component){_inherits(GameForm,_React$Component);var _super=_createSuper(GameForm);function GameForm(){var _this;_classCallCheck(this,GameForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.generateScore=function(formValues){_this.props.generateScore(formValues.leaderboardId);};return _this;}_createClass(GameForm,[{key:\"renderInput\",value:function renderInput(_ref){var input=_ref.input,type=_ref.type,name=_ref.name,lable=_ref.lable,meta=_ref.meta;return/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,lable),/*#__PURE__*/React.createElement(Form.Control,Object.assign({},input,{type:type,name:name})),/*#__PURE__*/React.createElement(Form.Text,null,meta.touched&&meta.error?/*#__PURE__*/React.createElement(\"div\",{style:{color:\"red\"}},meta.error):\"\"));}},{key:\"renderSelect\",value:function renderSelect(field){return/*#__PURE__*/React.createElement(Form.Group,{controlId:field.lable},/*#__PURE__*/React.createElement(Form.Label,null,field.lable),/*#__PURE__*/React.createElement(Form.Control,Object.assign({as:\"select\"},field.input,{name:field.name}),field.children),/*#__PURE__*/React.createElement(Form.Text,null,field.meta.error?/*#__PURE__*/React.createElement(\"div\",{style:{color:\"red\"}},field.meta.error):\"\"));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Form,{onSubmit:this.props.handleSubmit(this.generateScore)},/*#__PURE__*/React.createElement(Field,{name:\"leaderboardId\",lable:\"LeaderboardId\",component:this.renderSelect},/*#__PURE__*/React.createElement(\"option\",{value:\"NA\"},\"--Select--\"),this.props.leaderboards!=null&&this.props.leaderboards.map(function(lb){return/*#__PURE__*/React.createElement(\"option\",{key:lb},lb);})),/*#__PURE__*/React.createElement(Button,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},type:\"submit\"},\"Click here for score\")));}}]);return GameForm;}(React.Component);var validate=function validate(formValues){var errors={};if(!formValues.leaderboardId||formValues.leaderboardId==\"NA\"){errors.leaderboardId=\"Select leaderboard\";}return errors;};export default reduxForm({form:'Game',validate:validate})(GameForm);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/gameFormComponent.js"],"names":["React","Field","reduxForm","Form","Button","Table","GameForm","generateScore","formValues","props","leaderboardId","input","type","name","lable","meta","touched","error","color","field","children","handleSubmit","renderSelect","leaderboards","map","lb","backgroundColor","border","Component","validate","errors","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport {Form, Button, Table} from 'react-bootstrap'\n\nclass GameForm extends React.Component{\n\n    renderInput({input,type,name,lable,meta}){\n        return <Form.Group>\n            <Form.Label>{lable}</Form.Label>\n            <Form.Control {...input} type={type} name={name}/>\n            <Form.Text>\n            {( meta.touched && meta.error )? <div style={{color:\"red\"}}>{meta.error}</div> : \"\" } \n            </Form.Text>\n        </Form.Group>\n    }\n\n    renderSelect(field){\n        return <Form.Group controlId={field.lable}>\n            <Form.Label>{field.lable}</Form.Label>\n            <Form.Control as=\"select\" {...field.input} name={field.name}>\n                {field.children}\n            </Form.Control>\n            <Form.Text>\n            {( field.meta.error )? <div style={{color:\"red\"}}>{field.meta.error}</div> : \"\" } \n            </Form.Text>\n        </Form.Group>\n    }\n\n    generateScore = (formValues) =>{\n        this.props.generateScore(formValues.leaderboardId)\n    }\n\n    render(){\n        return <div>\n           \n            <Form onSubmit={this.props.handleSubmit(this.generateScore)}>\n                <Field name=\"leaderboardId\" lable=\"LeaderboardId\" component={this.renderSelect}>\n                    <option value=\"NA\">--Select--</option>\n                    {\n                        this.props.leaderboards != null && this.props.leaderboards.map((lb) => {\n                            return <option key={lb}>{lb}</option>\n                        })\n                    }\n            </Field>\n            <Button style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} type=\"submit\">Click here for score</Button>\n            </Form>\n        </div>\n    }\n}\n\nconst validate = (formValues) => {\n    const errors ={}\n    if(!formValues.leaderboardId || formValues.leaderboardId == \"NA\"){\n        errors.leaderboardId = \"Select leaderboard\"\n    }\n    return errors\n}\n\nexport default reduxForm({\n    form : 'Game',\n    validate\n})(GameForm)"]},"metadata":{},"sourceType":"module"}