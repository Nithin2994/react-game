{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/login.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver';\nimport { saveUser } from '../actions/useraction';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport GoogleAuth from './googleAuth';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.user = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.login = async event => {\n      event.preventDefault();\n      let response = await gameserver.post(\"/login\", {\n        playerName: this.user.username,\n        password: this.user.password\n      });\n      console.log(response);\n\n      if (response != null & response.data.token != null) {\n        this.props.saveUser(this.user.username, response.data.token);\n        this.context.router.history.push(`/target`);\n      } else {\n        alert(\"Technical Error!\");\n      }\n    };\n\n    this.changeHandler = event => {\n      event.preventDefault();\n      this.user[event.target.name] = event.target.value;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"margin-left\": \"10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"UserName\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Text\",\n      name: \"username\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 87\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(GoogleAuth, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  saveUser\n})(Login);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/login.js"],"names":["React","gameserver","saveUser","connect","Redirect","GoogleAuth","Login","Component","constructor","props","user","username","password","login","event","preventDefault","response","post","playerName","console","log","data","token","context","router","history","push","alert","changeHandler","target","name","value","render","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver'\nimport { saveUser } from '../actions/useraction'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport GoogleAuth from './googleAuth'\n\nclass Login extends React.Component{\n\n    user = { username :\"\", password : \"\"}\n\n    constructor(props) {\n        super(props);\n      }\n    \n    login = async (event) => {\n        event.preventDefault()\n        let response = await gameserver.post(\"/login\",{\n                playerName:this.user.username,\n\t            password:this.user.password\n        })\n\n        console.log(response)\n        if(response != null & response.data.token != null){\n            this.props.saveUser(this.user.username, response.data.token)\n            this.context.router.history.push(`/target`)\n        }else{\n            alert(\"Technical Error!\")\n        }\n\n        \n    }\n\n    changeHandler = (event) => {\n        event.preventDefault()\n        this.user[event.target.name] = event.target.value\n        \n    }\n    render(){\n        return <div style={{\"margin-left\":\"10%\"}}>\n            <h2>Login</h2>\n            <form onSubmit={this.login}>\n                <label>UserName</label>\n                <input type={\"Text\"} name=\"username\" onChange={this.changeHandler}/><br></br>\n                <label>Password</label>\n                <input type=\"password\" name=\"password\" onChange={this.changeHandler}/><br></br>\n                <button type=\"submit\">Login</button><br></br>\n            </form>\n\n            <GoogleAuth />\n        </div>\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nexport default connect(mapStateToProps,{saveUser})(Login);"]},"metadata":{},"sourceType":"module"}