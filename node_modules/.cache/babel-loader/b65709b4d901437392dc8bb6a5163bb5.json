{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/game.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver';\n\nclass GameConatiner extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      leaderboards: [\"Test\", \"Test1\"],\n      score: 0,\n      status: \"\"\n    };\n\n    this.getLeaderboarOptions = () => {};\n\n    this.changeHandler = event => {\n      event.preventDefault();\n      let key = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [key]: val\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let random = Math.round(Math.random()) * 10 + Math.round(Math.random()) * 20;\n      this.setState({\n        score: random\n      });\n      let response = gameserver.post(\"/leaderboard/\" + this.state.leaderboardId + \"/addScore\", {\n        name: this.props.username,\n        score: this.state.score\n      });\n      console.log(response);\n\n      if (response != null) {\n        this.setState({\n          status: response.data.status\n        });\n      } else {\n        this.setState({\n          status: \"Technical Error!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"leaderboardId\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.state.leaderboards.map(lb => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: lb,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 36\n        }\n      }, lb);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Press to update score\")), this.state.score);\n  }\n\n}\n\nexport default GameConatiner;","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/game.js"],"names":["React","gameserver","GameConatiner","Component","state","leaderboards","score","status","getLeaderboarOptions","changeHandler","event","preventDefault","key","target","name","val","value","setState","submitHandler","random","Math","round","response","post","leaderboardId","props","username","console","log","data","render","map","lb"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA2C;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAEjC;AAAEC,MAAAA,YAAY,EAAC,CAAC,MAAD,EAAQ,OAAR,CAAf;AAAiCC,MAAAA,KAAK,EAAC,CAAvC;AAA0CC,MAAAA,MAAM,EAAC;AAAjD,KAFiC;;AAAA,SAIvCC,oBAJuC,GAIhB,MAAM,CAE5B,CANsC;;AAAA,SAQvCC,aARuC,GAQtBC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAvB;AACA,UAAIC,GAAG,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAAvB;AACA,WAAKC,QAAL,CAAc;AACV,SAACL,GAAD,GAAQG;AADE,OAAd;AAGH,KAfsC;;AAAA,SAiBvCG,aAjBuC,GAiBtBR,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIQ,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,IAA4B,EAA7B,GAAoCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,IAA4B,EAA7E;AACA,WAAKF,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAIa;AADC,OAAd;AAGA,UAAIG,QAAQ,GAAGrB,UAAU,CAACsB,IAAX,CAAgB,kBAAgB,KAAKnB,KAAL,CAAWoB,aAA3B,GAAyC,WAAzD,EAAqE;AAC5EV,QAAAA,IAAI,EAAC,KAAKW,KAAL,CAAWC,QAD4D;AAE/EpB,QAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWE;AAF8D,OAArE,CAAf;AAKAqB,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAEA,UAAGA,QAAQ,IAAI,IAAf,EAAoB;AAChB,aAAKL,QAAL,CAAc;AACVV,UAAAA,MAAM,EAAGe,QAAQ,CAACO,IAAT,CAActB;AADb,SAAd;AAGH,OAJD,MAIK;AACD,aAAKU,QAAL,CAAc;AACVV,UAAAA,MAAM,EAAG;AADC,SAAd;AAGH;AACJ,KAvCsC;AAAA;;AAyCvCuB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAM,MAAA,QAAQ,EAAE,KAAKZ,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA6B,MAAA,QAAQ,EAAE,KAAKT,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKL,KAAL,CAAWC,YAAX,CAAwB0B,GAAxB,CAA6BC,EAAD,IAAQ;AAChC,0BAAO;AAAQ,QAAA,GAAG,EAAEA,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,EAAlB,CAAP;AACH,KAFD,CAFR,CADJ,eAOa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPb,eAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARJ,CADG,EAWF,KAAK5B,KAAL,CAAWE,KAXT,CAAP;AAaH;;AAvDsC;;AA0D3C,eAAeJ,aAAf","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver'\n\nclass GameConatiner extends React.Component{\n\n    state={ leaderboards:[\"Test\",\"Test1\"], score:0, status:\"\"}\n\n    getLeaderboarOptions = () => {\n        \n    }\n\n    changeHandler = (event) => {\n        event.preventDefault()\n        let key = event.target.name\n        let val = event.target.value\n        this.setState({\n            [key] : val\n        })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n        let random = (Math.round(Math.random()) * 10) + (Math.round(Math.random()) * 20)\n        this.setState({\n            score :  random\n        })\n        let response = gameserver.post(\"/leaderboard/\"+this.state.leaderboardId+\"/addScore\",{\n                name:this.props.username,\n\t            score:this.state.score\n        })\n\n        console.log(response)\n        \n        if(response != null){\n            this.setState({\n                status : response.data.status\n            })\n        }else{\n            this.setState({\n                status : \"Technical Error!\"\n            })\n        }\n    }\n\n    render(){\n        return <div>\n            <form onSubmit={this.submitHandler}>\n                <select name=\"leaderboardId\" onChange={this.changeHandler}>\n                    {\n                        this.state.leaderboards.map((lb) => {\n                            return <option key={lb}>{lb}</option>\n                        })\n                    }\n                </select><br></br>\n                <button type=\"submit\">Press to update score</button>\n            </form>\n            {this.state.score}\n        </div>\n    }\n}\n\nexport default GameConatiner"]},"metadata":{},"sourceType":"module"}