{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadCurrencies } from '../actions/useraction';\nimport gameserver from '../apis/gameserver';\n\nclass Transaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.trans = {\n      amount: 0,\n      currency: \"\"\n    };\n    this.state = {\n      status: \"\"\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.trans[event.target.name] = event.target.value;\n    };\n\n    this.handleSubmit = async () => {\n      const response = await gameserver.post(\"/wallet/\" + this.props.name, {\n        playerName: this.props.user.username,\n        amount: this.trans.amount,\n        currency: this.trans.currency\n      });\n      this.setState({\n        status: response.data.status\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadCurrencies();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Transaction Type : \", this.props.name), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Amount \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Currency \"), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, this.props.currencies != null && this.props.currencies.map(currency => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 28\n        }\n      }, currency);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"submit\")), this.state.status);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currencies: state.currencies,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCurrencies\n})(Transaction);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js"],"names":["React","connect","loadCurrencies","gameserver","Transaction","Component","trans","amount","currency","state","status","handleChange","event","preventDefault","target","name","value","handleSubmit","response","post","props","playerName","user","username","setState","data","componentDidMount","render","currencies","map","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAAEC,MAAAA,MAAM,EAAG,CAAX;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAF6B;AAAA,SAIrCC,KAJqC,GAI7B;AACJC,MAAAA,MAAM,EAAG;AADL,KAJ6B;;AAAA,SAcrCC,YAdqC,GAcrBC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKP,KAAL,CAAWM,KAAK,CAACE,MAAN,CAAaC,IAAxB,IAAgCH,KAAK,CAACE,MAAN,CAAaE,KAA7C;AACH,KAjBoC;;AAAA,SAmBrCC,YAnBqC,GAmBtB,YAAY;AACvB,YAAMC,QAAQ,GAAI,MAAMf,UAAU,CAACgB,IAAX,CAAgB,aAAW,KAAKC,KAAL,CAAWL,IAAtC,EAA2C;AAC/DM,QAAAA,UAAU,EAAC,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,QADoC;AAE/DhB,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAF4C;AAG/DC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAH0C,OAA3C,CAAxB;AAMA,WAAKgB,QAAL,CAAc;AACVd,QAAAA,MAAM,EAAGQ,QAAQ,CAACO,IAAT,CAAcf;AADb,OAAd;AAGH,KA7BoC;AAAA;;AAQrCgB,EAAAA,iBAAiB,GAAE;AACf,SAAKN,KAAL,CAAWlB,cAAX;AACH;;AAqBDyB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKP,KAAL,CAAWL,IAAnC,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAEyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFzC,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKK,KAAL,CAAWQ,UAAX,IAAyB,IAAzB,IAAkC,KAAKR,KAAL,CAAWQ,UAAX,CAAsBC,GAAtB,CAA2BrB,QAAD,IAAY;AACrE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,QAAT,CAAP;AACH,KAFkC,CADnC,CAJJ,eASa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATb,eAUI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,CAFG,EAcF,KAAKC,KAAL,CAAWC,MAdT,CAAP;AAgBH;;AAhDoC;;AAmDzC,MAAMoB,eAAe,GAAIrB,KAAD,IAAW;AAC/B,SAAO;AACHmB,IAAAA,UAAU,EAAGnB,KAAK,CAACmB,UADhB;AAEHN,IAAAA,IAAI,EAAGb,KAAK,CAACa;AAFV,GAAP;AAIH,CALD;;AAOA,eAAerB,OAAO,CAAC6B,eAAD,EAAiB;AAAC5B,EAAAA;AAAD,CAAjB,CAAP,CAA0CE,WAA1C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadCurrencies} from '../actions/useraction'\nimport gameserver from '../apis/gameserver'\n\nclass Transaction extends React.Component{\n\n    trans = { amount : 0, currency :\"\"};\n\n    state = {\n        status : \"\"\n    }\n\n    componentDidMount(){\n        this.props.loadCurrencies()\n    }\n\n\n\n    handleChange = (event) => {\n        event.preventDefault()\n        this.trans[event.target.name] = event.target.value;\n    }\n\n    handleSubmit = async () => {\n        const response =  await gameserver.post(\"/wallet/\"+this.props.name,{\n            playerName:this.props.user.username,\n            amount: this.trans.amount,\n            currency: this.trans.currency\n        })\n\n        this.setState({\n            status : response.data.status\n        })\n    }\n\n    render(){\n        return <div>\n            <h2>Transaction Type : {this.props.name}</h2>\n            <form>\n                <label >Amount </label> \n                <input type=\"number\" name=\"amount\" /><br></br>\n                <label >Currency </label> \n                <select>\n                {this.props.currencies != null  && this.props.currencies.map((currency)=>{\n                    return <option>{currency}</option>\n                })}\n                    \n                </select><br></br>\n                <button type=\"submit\">submit</button>\n            </form>\n            {this.state.status}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currencies : state.currencies,\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps,{loadCurrencies})(Transaction)"]},"metadata":{},"sourceType":"module"}