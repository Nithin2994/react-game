{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/GitHub/react-game/src/components/main.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Home from './home';\nimport Index from './index';\nimport Modal from './modal';\n\nclass MainComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: {},\n      othersMessage: []\n    };\n\n    this.sendMessage = () => {\n      this.ws.send(JSON.stringify(this.state.message));\n      this.setState({\n        othersMessage: [...this.state.othersMessage, this.state.message]\n      });\n    };\n\n    this.onChangeHandler = event => {\n      console.log(event.target.value);\n      this.setState({\n        message: {\n          sender: this.props.match.params.from,\n          recipient: this.props.match.params.to,\n          content: event.target.value\n        }\n      });\n    };\n\n    this.renderComponent = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, this.props.match.params.to), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        onChange: this.onChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"Send Message\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), this.state.othersMessage.map(mes => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 31\n          }\n        }, mes.sender, \" : \", mes.content, \" \"));\n      })));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params) {\n      console.log(this.props.match.params);\n      this.ws = new WebSocket('ws://localhost:8081/chat/' + this.props.match.params.from);\n      this.ws.addEventListener(\"message\", mes => {\n        console.log(\"res\", mes);\n        this.setState({\n          othersMessage: [...this.state.othersMessage, JSON.parse(mes.data)]\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.renderComponent());\n  }\n\n}\n\nconst mapStateFromProps = state => {\n  return {\n    username: state.user.username\n  };\n};\n\nexport default connect(mapStateFromProps)(MainComponent);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/main.js"],"names":["React","connect","Home","Index","Modal","MainComponent","Component","state","message","othersMessage","sendMessage","ws","send","JSON","stringify","setState","onChangeHandler","event","console","log","target","value","sender","props","match","params","from","recipient","to","content","renderComponent","map","mes","componentDidMount","WebSocket","addEventListener","parse","data","render","mapStateFromProps","username","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport Home from './home'\nimport Index from './index'\nimport Modal from './modal'\n\nclass MainComponent extends React.Component{\n\n    state = {\n        message : {},\n        othersMessage : []\n    }\n\n    componentDidMount(){\n\n        \n\n        if(this.props.match.params){\n            console.log(this.props.match.params)\n            this.ws = new WebSocket('ws://localhost:8081/chat/'+this.props.match.params.from);\n\n        this.ws.addEventListener(\"message\",(mes)=>{\n            console.log(\"res\",mes)\n            \n            this.setState({\n                othersMessage : [...this.state.othersMessage, JSON.parse(mes.data)]\n            })\n        })\n        }\n    }\n\n    sendMessage = () =>{\n        this.ws.send(JSON.stringify(this.state.message));\n        this.setState({\n            othersMessage : [...this.state.othersMessage, this.state.message]\n        })\n    }\n\n    onChangeHandler = (event) => {\n        console.log(event.target.value)\n        this.setState({\n            message : {\n                sender : this.props.match.params.from,\n                recipient : this.props.match.params.to,\n                content : event.target.value\n            }\n        })\n        \n    }\n\n    renderComponent = () => {\n        return <div>\n            <div>{this.props.match.params.to}</div>\n            <input type=\"text\" name=\"message\" onChange={this.onChangeHandler}/>\n            <button onClick={this.sendMessage}>Send Message</button>\n\n            <div>\n                <table>\n                    \n                </table>\n                {this.state.othersMessage.map((mes)=>{\n                    return<tr><td>{mes.sender} : {mes.content} </td></tr>\n                })}\n            </div>\n            </div>\n    }\n\n    render(){\n        return (\n            <div>\n                {/* <Modal /> */}\n                {this.renderComponent()}\n            </div>\n        )\n    }\n}\n\nconst mapStateFromProps = (state) => {\n    return {\n        username : state.user.username\n    }\n}\n\nexport default connect(mapStateFromProps)(MainComponent)"]},"metadata":{},"sourceType":"module"}