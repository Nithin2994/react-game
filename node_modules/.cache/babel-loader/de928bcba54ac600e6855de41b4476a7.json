{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js\";\nimport React from 'react';\nimport gameserver from '../apis/gameserver.js';\nimport LeaderboardTable from './leaderboardTable.js';\nimport { connect } from 'react-redux';\nimport { loadLeaderboardData } from '../actions/useraction';\n\nclass LeaderboardView extends React.Component {\n  componentDidMount() {\n    console.log(this.props.leaderboardName);\n    this.props.loadLeaderboardData(this.props.leaderboardName);\n  }\n\n  render() {\n    var i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leaderboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"Leaderboard Name : \", this.props.leaderboardName), this.props.leaderboardData.leaderboardDetails != null ? this.props.leaderboardData.leaderboardDetails.subLeaderboards.map(lb => {\n      let players = this.props.leaderboardData.leaderboardDetails.players[lb];\n      return /*#__PURE__*/React.createElement(LeaderboardTable, {\n        instance: i++,\n        players: players,\n        playerScores: this.props.leaderboardData.leaderboardDetails.details,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 28\n        }\n      });\n    }) : \"\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    leaderboardData: state.leaderboardsData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadLeaderboardData\n})(LeaderboardView);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/leaderboard.js"],"names":["React","gameserver","LeaderboardTable","connect","loadLeaderboardData","LeaderboardView","Component","componentDidMount","console","log","props","leaderboardName","render","i","leaderboardData","leaderboardDetails","subLeaderboards","map","lb","players","details","mapStateToProps","state","leaderboardsData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAGA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA6C;AAEzCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,eAAvB;AACA,SAAKD,KAAL,CAAWN,mBAAX,CAA+B,KAAKM,KAAL,CAAWC,eAA1C;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,CAAC,GAAE,CAAP;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKH,KAAL,CAAWC,eAAnC,CADJ,EAIK,KAAKD,KAAL,CAAWI,eAAX,CAA2BC,kBAA3B,IAAiD,IAAlD,GACA,KAAKL,KAAL,CAAWI,eAAX,CAA2BC,kBAA3B,CAA8CC,eAA9C,CAA8DC,GAA9D,CAAmEC,EAAD,IAAM;AACpE,UAAIC,OAAO,GAAG,KAAKT,KAAL,CAAWI,eAAX,CAA2BC,kBAA3B,CAA8CI,OAA9C,CAAsDD,EAAtD,CAAd;AACA,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEL,CAAC,EAA7B;AAAiC,QAAA,OAAO,EAAEM,OAA1C;AAAmD,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWI,eAAX,CAA2BC,kBAA3B,CAA8CK,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF,KAHF,CADA,GAIM,EARV,CADJ;AAaH;;AAtBwC;;AAyB7C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,eAAe,EAAGQ,KAAK,CAACC;AADrB,GAAP;AAGH,CAJD;;AAKA,eAAepB,OAAO,CAACkB,eAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAP,CAA+CC,eAA/C,CAAf","sourcesContent":["import React from 'react'\nimport gameserver from '../apis/gameserver.js'\nimport LeaderboardTable from './leaderboardTable.js'\nimport {connect} from 'react-redux'\nimport { loadLeaderboardData } from '../actions/useraction'\n\n\nclass LeaderboardView extends React.Component{\n\n    componentDidMount(){\n        console.log(this.props.leaderboardName)\n        this.props.loadLeaderboardData(this.props.leaderboardName);\n    }\n\n    render(){\n        var i =0;\n        return(\n            <div className={\"leaderboard\"}>\n                <h2>Leaderboard Name : {this.props.leaderboardName}</h2>\n                { \n                \n                (this.props.leaderboardData.leaderboardDetails != null) ?\n                this.props.leaderboardData.leaderboardDetails.subLeaderboards.map((lb)=>{\n                    let players = this.props.leaderboardData.leaderboardDetails.players[lb]\n                    return <LeaderboardTable instance={i++} players={players} playerScores={this.props.leaderboardData.leaderboardDetails.details}/>\n                 }) : \"\"\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        leaderboardData : state.leaderboardsData\n    }\n}\nexport default connect(mapStateToProps,{loadLeaderboardData})(LeaderboardView);"]},"metadata":{},"sourceType":"module"}