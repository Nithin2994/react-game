{"ast":null,"code":"import _classCallCheck from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nithin.reddy/Documents/GitHub/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{loadLeaderboards}from'../actions/useraction';import PlayerLeaderboardView from'./playerLeaderboardView';import{Card,Row,Col}from'react-bootstrap';var PlayerLeaderboard=/*#__PURE__*/function(_React$Component){_inherits(PlayerLeaderboard,_React$Component);var _super=_createSuper(PlayerLeaderboard);function PlayerLeaderboard(){_classCallCheck(this,PlayerLeaderboard);return _super.apply(this,arguments);}_createClass(PlayerLeaderboard,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.loadLeaderboards();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{style:{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"},text:\"white\"},/*#__PURE__*/React.createElement(Card.Header,null,\"Leaderboards\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,this.props.leaderboards!=null?this.props.leaderboards.map(function(lbname){return/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(PlayerLeaderboardView,{leaderboardName:lbname}));}):\"\"))));}}]);return PlayerLeaderboard;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{leaderboards:state.leaderboards};};export default connect(mapStateToProps,{loadLeaderboards:loadLeaderboards})(PlayerLeaderboard);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/playerLeaderboard.js"],"names":["React","connect","loadLeaderboards","PlayerLeaderboardView","Card","Row","Col","PlayerLeaderboard","props","backgroundColor","border","leaderboards","map","lbname","Component","mapStateToProps","state"],"mappings":"woBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,OAAQC,IAAR,CAAaC,GAAb,CAAiBC,GAAjB,KAA2B,iBAA3B,C,GAEMC,CAAAA,iB,uUAEiB,CACf,KAAKC,KAAL,CAAWN,gBAAX,GACH,C,uCAEO,CACJ,mBAAO,4CACH,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACO,eAAe,CAAC,SAAjB,CAA2BC,MAAM,CAAC,SAAlC,CAAb,CAA2D,IAAI,CAAC,OAAhE,eACI,oBAAC,IAAD,CAAM,MAAN,qBADJ,cAII,oBAAC,IAAD,CAAM,IAAN,mBACA,oBAAC,GAAD,MAEK,KAAKF,KAAL,CAAWG,YAAX,EAA2B,IAA5B,CACI,KAAKH,KAAL,CAAWG,YAAX,CAAwBC,GAAxB,CAA4B,SAACC,MAAD,CAAU,CAClC,mBAAO,oBAAC,GAAD,mBAAK,oBAAC,qBAAD,EAAuB,eAAe,CAAEA,MAAxC,EAAL,CAAP,CACP,CAFG,CADJ,CAGK,EALT,CADA,CAJJ,CADG,CAAP,CAiBH,C,+BAxB2Bb,KAAK,CAACc,S,EA2BtC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAU,CAC9B,MAAO,CACHL,YAAY,CAAGK,KAAK,CAACL,YADlB,CAAP,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAACc,eAAD,CAAiB,CAACb,gBAAgB,CAAhBA,gBAAD,CAAjB,CAAP,CAA4CK,iBAA5C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadLeaderboards} from '../actions/useraction'\nimport PlayerLeaderboardView from './playerLeaderboardView'\nimport {Card,Row,Col} from 'react-bootstrap'\n\nclass PlayerLeaderboard extends React.Component{\n\n    componentDidMount(){\n        this.props.loadLeaderboards()\n    }\n\n    render(){\n        return <div>\n            <Card style={{backgroundColor:\"#24bfb8\",border:\"#24bfb8\"}} text=\"white\">\n                <Card.Header>\n                    Leaderboards\n                </Card.Header>\n                <Card.Body>\n                <Row>\n                {\n                    (this.props.leaderboards != null) ? \n                        this.props.leaderboards.map((lbname)=>{\n                            return <Col><PlayerLeaderboardView leaderboardName={lbname}/></Col>\n                    }) : \"\"\n                }\n                </Row>\n                </Card.Body>\n            </Card>\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        leaderboards : state.leaderboards\n    }\n}\n\nexport default connect(mapStateToProps,{loadLeaderboards})(PlayerLeaderboard)"]},"metadata":{},"sourceType":"module"}