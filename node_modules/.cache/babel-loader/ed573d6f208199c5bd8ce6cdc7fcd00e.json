{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadCurrencies, loadBalances } from '../actions/useraction';\nimport gameserver from '../apis/gameserver';\nimport FormComponent from './FormComponent';\n\nclass Transaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.trans = {\n      amount: 0,\n      currency: \"NA\",\n      type: \"NA\"\n    };\n    this.state = {\n      status: \"\"\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      console.log(event.target.name);\n      console.log(event.target.value);\n      this.trans[event.target.name] = event.target.value;\n    };\n\n    this.handleSubmit = async () => {\n      console.log(this.trans);\n\n      if (this.trans.type != \"NA\" && this.trans.currency != \"NA\") {\n        const response = await gameserver.post(\"/wallet/\" + this.trans.type, {\n          playerName: this.props.username,\n          amount: parseInt(this.trans.amount),\n          currency: this.trans.currency\n        });\n        this.setState({\n          status: response.data.status\n        });\n        this.props.loadBalances(this.props.username);\n      } else {\n        alert(\"Select currency and type\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadCurrencies();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Transaction Type : \", this.props.name), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Amount \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 83\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Currency \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"-select-\"), this.props.currencies != null && this.props.currencies.map(currency => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: currency,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }\n      }, currency);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Transaction Type \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"type\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"-select-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"debit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"debit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"credit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"credit\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"submit\")), this.state.status, /*#__PURE__*/React.createElement(FormComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currencies: state.currencies,\n    username: state.user.username\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCurrencies,\n  loadBalances\n})(Transaction);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js"],"names":["React","connect","loadCurrencies","loadBalances","gameserver","FormComponent","Transaction","Component","trans","amount","currency","type","state","status","handleChange","event","preventDefault","console","log","target","name","value","handleSubmit","response","post","playerName","props","username","parseInt","setState","data","alert","componentDidMount","render","currencies","map","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadCurrencies, loadBalances} from '../actions/useraction'\nimport gameserver from '../apis/gameserver'\nimport FormComponent from './FormComponent';\n\nclass Transaction extends React.Component{\n\n    trans = { amount : 0, currency :\"NA\", type :\"NA\"};\n\n    state = {\n        status : \"\"\n    }\n\n    componentDidMount(){\n        this.props.loadCurrencies()\n    }\n\n    handleChange = (event) => {\n        event.preventDefault()\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.trans[event.target.name] = event.target.value;\n    }\n\n    handleSubmit = async () => {\n        console.log(this.trans)\n        if(this.trans.type != \"NA\" && this.trans.currency != \"NA\"){\n            const response =  await gameserver.post(\"/wallet/\"+this.trans.type,{\n                playerName: this.props.username,\n                amount: parseInt(this.trans.amount),\n                currency: this.trans.currency\n            })\n    \n            this.setState({\n                status : response.data.status\n            })\n    \n            this.props.loadBalances(this.props.username)\n        }else{\n            alert(\"Select currency and type\")\n        }\n        \n    }\n\n    render(){\n        return <div>\n            <h2>Transaction Type : {this.props.name}</h2>\n            <form>\n                <label >Amount </label> \n                <input type=\"number\" name=\"amount\" onChange={this.handleChange} /><br></br>\n                <label >Currency </label> \n                <select name=\"currency\" onChange={this.handleChange}>\n                    <option value=\"NA\">-select-</option>\n                {this.props.currencies != null  && this.props.currencies.map((currency)=>{\n                    return <option value={currency}>{currency}</option>\n                })}\n                    \n                </select><br></br>\n                <label >Transaction Type </label> \n                <select name=\"type\" onChange={this.handleChange}>\n                    <option value=\"NA\">-select-</option>\n                    <option value=\"debit\">debit</option>\n                    <option value=\"credit\">credit</option>\n                </select><br></br>\n                <button type=\"button\" onClick={this.handleSubmit}>submit</button>\n            </form>\n            {this.state.status}\n\n            <FormComponent />\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currencies : state.currencies,\n        username : state.user.username\n    }\n}\n\nexport default connect(mapStateToProps,{loadCurrencies, loadBalances})(Transaction)"]},"metadata":{},"sourceType":"module"}