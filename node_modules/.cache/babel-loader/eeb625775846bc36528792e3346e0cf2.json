{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst usersReducer = (oldUser = {\n  username: \"Nithin1\",\n  token: \"\"\n}, action) => {\n  if (action.type == \"SAVE_USER\") {\n    return {\n      username: action.payload.username,\n      token: action.payload.token\n    };\n  }\n\n  return oldUser;\n};\n\nconst leaderboardsReducers = (leaderboards = [], action) => {\n  if (action.type == \"LOAD_LEADERBOARDS\") {\n    return action.payload.leaderboards;\n  }\n\n  return leaderboards;\n};\n\nconst leaderboardsDataReducers = (leaderboardDetails = [], action) => {\n  if (action.type == \"LOAD_LEADERBOARDS_DATA\") {\n    let leaderboardDetailsTemp = [];\n    leaderboardDetails.map(leaderboard => {\n      if (leaderboard.leaderboardName != action.payload.leaderboardId) {\n        leaderboardDetailsTemp = [...leaderboardDetailsTemp, leaderboard];\n      }\n    });\n    let obj = {\n      leaderboardName: action.payload.leaderboardId,\n      data: action.payload.leaderboardsData\n    };\n    leaderboardDetailsTemp = [...leaderboardDetailsTemp, obj];\n    return leaderboardDetailsTemp;\n  }\n\n  if (action.type == \"UPDATE_SCORE\") {\n    let leaderboardDetailsTemp = [...leaderboardDetails];\n    leaderboardDetailsTemp.map(lb => {\n      if (lb.leaderboardName === action.payload.leaderboard) {\n        leaderboardDetailsTemp.data.details[action.payload.player] = action.payload.score;\n      }\n    });\n  }\n\n  return leaderboardDetails;\n};\n\nconst showError = (error = \"\", action) => {\n  if (action.type = \"SHOW_SCORE_ERROR\") {\n    return \"Error in setting score\";\n  }\n\n  return error;\n};\n\nexport default combineReducers({\n  user: usersReducer,\n  leaderboards: leaderboardsReducers,\n  leaderboardsData: leaderboardsDataReducers,\n  errorMessage: showError\n});","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/reducers/index.js"],"names":["combineReducers","usersReducer","oldUser","username","token","action","type","payload","leaderboardsReducers","leaderboards","leaderboardsDataReducers","leaderboardDetails","leaderboardDetailsTemp","map","leaderboard","leaderboardName","leaderboardId","obj","data","leaderboardsData","lb","details","player","score","showError","error","user","errorMessage"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;;AAGA,MAAMC,YAAY,GAAG,CAACC,OAAO,GAAG;AAAEC,EAAAA,QAAQ,EAAE,SAAZ;AAAuBC,EAAAA,KAAK,EAAC;AAA7B,CAAX,EAA8CC,MAA9C,KAAyD;AAC1E,MAAGA,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA8B;AAC1B,WAAO;AACHH,MAAAA,QAAQ,EAAGE,MAAM,CAACE,OAAP,CAAeJ,QADvB;AAEHC,MAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeH;AAFnB,KAAP;AAIH;;AAED,SAAOF,OAAP;AACH,CATD;;AAWA,MAAMM,oBAAoB,GAAG,CAACC,YAAY,GAAC,EAAd,EAAkBJ,MAAlB,KAA6B;AACtD,MAAGA,MAAM,CAACC,IAAP,IAAe,mBAAlB,EAAsC;AAClC,WAAOD,MAAM,CAACE,OAAP,CAAeE,YAAtB;AACH;;AAED,SAAOA,YAAP;AACH,CAND;;AAQA,MAAMC,wBAAwB,GAAG,CAACC,kBAAkB,GAAE,EAArB,EAAyBN,MAAzB,KAAoC;AACjE,MAAGA,MAAM,CAACC,IAAP,IAAe,wBAAlB,EAA2C;AACvC,QAAIM,sBAAsB,GAAG,EAA7B;AACAD,IAAAA,kBAAkB,CAACE,GAAnB,CAAwBC,WAAD,IAAe;AAClC,UAAGA,WAAW,CAACC,eAAZ,IAA+BV,MAAM,CAACE,OAAP,CAAeS,aAAjD,EAA+D;AAC3DJ,QAAAA,sBAAsB,GAAG,CAAC,GAAIA,sBAAL,EAA6BE,WAA7B,CAAzB;AACH;AACJ,KAJD;AAKA,QAAIG,GAAG,GAAG;AACNF,MAAAA,eAAe,EAAGV,MAAM,CAACE,OAAP,CAAeS,aAD3B;AAENE,MAAAA,IAAI,EAAGb,MAAM,CAACE,OAAP,CAAeY;AAFhB,KAAV;AAIAP,IAAAA,sBAAsB,GAAG,CAAC,GAAIA,sBAAL,EAA6BK,GAA7B,CAAzB;AACA,WAAOL,sBAAP;AACH;;AAED,MAAGP,MAAM,CAACC,IAAP,IAAe,cAAlB,EAAiC;AAC7B,QAAIM,sBAAsB,GAAG,CAAC,GAAID,kBAAL,CAA7B;AACAC,IAAAA,sBAAsB,CAACC,GAAvB,CAA4BO,EAAD,IAAO;AAC9B,UAAGA,EAAE,CAACL,eAAH,KAAuBV,MAAM,CAACE,OAAP,CAAeO,WAAzC,EAAqD;AACjDF,QAAAA,sBAAsB,CAACM,IAAvB,CAA4BG,OAA5B,CAAoChB,MAAM,CAACE,OAAP,CAAee,MAAnD,IAA6DjB,MAAM,CAACE,OAAP,CAAegB,KAA5E;AACH;AACJ,KAJD;AAMH;;AAED,SAAOZ,kBAAP;AACH,CA3BD;;AA6BA,MAAMa,SAAS,GAAG,CAACC,KAAK,GAAG,EAAT,EAAapB,MAAb,KAAwB;AACtC,MAAGA,MAAM,CAACC,IAAP,GAAa,kBAAhB,EAAmC;AAC/B,WAAO,wBAAP;AACH;;AACD,SAAOmB,KAAP;AACH,CALD;;AAOA,eAAezB,eAAe,CAAC;AAC3B0B,EAAAA,IAAI,EAAEzB,YADqB;AAE3BQ,EAAAA,YAAY,EAAGD,oBAFY;AAG3BW,EAAAA,gBAAgB,EAAGT,wBAHQ;AAI3BiB,EAAAA,YAAY,EAAGH;AAJY,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux'\n\n\nconst usersReducer = (oldUser = { username :\"Nithin1\", token:\"\" }, action) => {\n    if(action.type == \"SAVE_USER\"){\n        return {\n            username : action.payload.username,\n            token: action.payload.token\n        }\n    }\n\n    return oldUser\n}\n\nconst leaderboardsReducers = (leaderboards=[], action) => {\n    if(action.type == \"LOAD_LEADERBOARDS\"){\n        return action.payload.leaderboards\n    }\n\n    return leaderboards;\n}\n\nconst leaderboardsDataReducers = (leaderboardDetails =[], action) => {\n    if(action.type == \"LOAD_LEADERBOARDS_DATA\"){\n        let leaderboardDetailsTemp = []\n        leaderboardDetails.map((leaderboard)=>{\n            if(leaderboard.leaderboardName != action.payload.leaderboardId){\n                leaderboardDetailsTemp = [... leaderboardDetailsTemp, leaderboard]\n            }\n        })\n        let obj = {\n            leaderboardName : action.payload.leaderboardId,\n            data : action.payload.leaderboardsData\n        }\n        leaderboardDetailsTemp = [... leaderboardDetailsTemp, obj]\n        return leaderboardDetailsTemp\n    }\n\n    if(action.type == \"UPDATE_SCORE\"){\n        let leaderboardDetailsTemp = [... leaderboardDetails]\n        leaderboardDetailsTemp.map((lb) =>{\n            if(lb.leaderboardName === action.payload.leaderboard){\n                leaderboardDetailsTemp.data.details[action.payload.player] = action.payload.score;\n            }\n        })\n        \n    }\n\n    return leaderboardDetails;\n}\n\nconst showError = (error = \"\", action) => {\n    if(action.type =\"SHOW_SCORE_ERROR\"){\n        return \"Error in setting score\"\n    }\n    return error;\n}\n\nexport default combineReducers({\n    user: usersReducer,\n    leaderboards : leaderboardsReducers,\n    leaderboardsData : leaderboardsDataReducers,\n    errorMessage : showError\n})"]},"metadata":{},"sourceType":"module"}