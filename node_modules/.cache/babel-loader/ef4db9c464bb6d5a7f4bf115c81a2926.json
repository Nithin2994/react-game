{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadCurrencies, loadBalances } from '../actions/useraction';\nimport gameserver from '../apis/gameserver';\nimport TransactionForm from './transactionFormComponent';\n\nclass Transaction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.trans = {\n      amount: 0,\n      currency: \"NA\",\n      type: \"NA\"\n    };\n    this.state = {\n      status: \"\"\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      console.log(event.target.name);\n      console.log(event.target.value);\n      this.trans[event.target.name] = event.target.value;\n    };\n\n    this.handleSubmit = async () => {\n      console.log(this.trans);\n\n      if (this.trans.type != \"NA\" && this.trans.currency != \"NA\") {\n        const response = await gameserver.post(\"/wallet/\" + this.trans.type, {\n          playerName: this.props.username,\n          amount: parseInt(this.trans.amount),\n          currency: this.trans.currency\n        }, {\n          headers: {\n            token: this.props.token\n          }\n        });\n        this.setState({\n          status: response.data.status\n        });\n        this.props.loadBalances(this.props.username, this.props.token);\n      } else {\n        alert(\"Select currency and type\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadCurrencies();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Transaction Type : \", this.props.name), /*#__PURE__*/React.createElement(TransactionForm, {\n      currecnies: this.props.currencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Amount \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 83\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Currency \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"-select-\"), this.props.currencies != null && this.props.currencies.map(currency => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: currency,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }\n      }, currency);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Transaction Type \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"type\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"-select-\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"debit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"debit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"credit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"credit\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"submit\")), this.state.status);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currencies: state.currencies,\n    username: state.user.username,\n    token: state.user.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCurrencies,\n  loadBalances\n})(Transaction);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/transaction.js"],"names":["React","connect","loadCurrencies","loadBalances","gameserver","TransactionForm","Transaction","Component","trans","amount","currency","type","state","status","handleChange","event","preventDefault","console","log","target","name","value","handleSubmit","response","post","playerName","props","username","parseInt","headers","token","setState","data","alert","componentDidMount","render","currencies","map","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadCurrencies, loadBalances} from '../actions/useraction'\nimport gameserver from '../apis/gameserver'\nimport TransactionForm from './transactionFormComponent';\n\nclass Transaction extends React.Component{\n\n    trans = { amount : 0, currency :\"NA\", type :\"NA\"};\n\n    state = {\n        status : \"\"\n    }\n\n    componentDidMount(){\n        this.props.loadCurrencies()\n    }\n\n    handleChange = (event) => {\n        event.preventDefault()\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.trans[event.target.name] = event.target.value;\n    }\n\n    handleSubmit = async () => {\n        console.log(this.trans)\n        if(this.trans.type != \"NA\" && this.trans.currency != \"NA\"){\n            const response =  await gameserver.post(\"/wallet/\"+this.trans.type,{\n                playerName: this.props.username,\n                amount: parseInt(this.trans.amount),\n                currency: this.trans.currency\n            },{\n                headers:{\n                    token : this.props.token\n                }\n            })\n    \n            this.setState({\n                status : response.data.status\n            })\n    \n            this.props.loadBalances(this.props.username,this.props.token)\n        }else{\n            alert(\"Select currency and type\")\n        }\n        \n    }\n\n    render(){\n        return <div>\n            <h2>Transaction Type : {this.props.name}</h2>\n            <TransactionForm currecnies={this.props.currencies}/> \n            { <form>\n                <label >Amount </label> \n                <input type=\"number\" name=\"amount\" onChange={this.handleChange} /><br></br>\n                <label >Currency </label> \n                <select name=\"currency\" onChange={this.handleChange}>\n                    <option value=\"NA\">-select-</option>\n                {this.props.currencies != null  && this.props.currencies.map((currency)=>{\n                    return <option value={currency}>{currency}</option>\n                })}\n                    \n                </select><br></br>\n                <label >Transaction Type </label> \n                <select name=\"type\" onChange={this.handleChange}>\n                    <option value=\"NA\">-select-</option>\n                    <option value=\"debit\">debit</option>\n                    <option value=\"credit\">credit</option>\n                </select><br></br>\n                <button type=\"button\" onClick={this.handleSubmit}>submit</button>\n            </form> }\n            {this.state.status}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currencies : state.currencies,\n        username : state.user.username,\n        token : state.user.token\n    }\n}\n\nexport default connect(mapStateToProps,{loadCurrencies, loadBalances})(Transaction)"]},"metadata":{},"sourceType":"module"}