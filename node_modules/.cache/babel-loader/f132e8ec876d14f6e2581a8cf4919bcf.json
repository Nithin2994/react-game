{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/react/myapp/src/components/game.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updateScore, loadLeaderboards } from '../actions/useraction';\n\nclass GameConatiner extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.player = {\n      leaderboardId: \"NA\",\n      score: \"\"\n    };\n\n    this.changeHandler = event => {\n      event.preventDefault();\n      let key = event.target.name;\n      let val = event.target.value;\n      console.log(\"changeHandler\", key, val);\n      this.player[key] = val;\n    };\n\n    this.submitHandler = async event => {\n      event.preventDefault();\n\n      if (this.player.leaderboardId && this.player.leaderboardId == \"NA\") {\n        alert(\"Select Leaderboard\");\n      } else {\n        let random = Math.round(Math.random()) * 10 + Math.round(Math.random()) * 20;\n        this.player.score = random;\n        this.props.updateScore(this.player.leaderboardId, this.props.username, random, this.props.token);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadLeaderboards();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"leaderboardId\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"NA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"--Select--\"), this.props.leaderboards != null && this.props.leaderboards.map(lb => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: lb,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }\n      }, lb);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Press to update score\")), this.props.errorMessage != \"\" ? this.props.errorMessage : \"\", \"Your current game score : \", this.props.score);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.user.username,\n    token: state.user.token,\n    leaderboards: state.leaderboards,\n    score: state.score,\n    errorMessage: state.errorMessage\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateScore,\n  loadLeaderboards\n})(GameConatiner);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/react/myapp/src/components/game.js"],"names":["React","connect","updateScore","loadLeaderboards","GameConatiner","Component","player","leaderboardId","score","changeHandler","event","preventDefault","key","target","name","val","value","console","log","submitHandler","alert","random","Math","round","props","username","token","componentDidMount","render","leaderboards","map","lb","errorMessage","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA6C,uBAA7C;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA2C;AAAA;AAAA;AAAA,SAEvCC,MAFuC,GAE9B;AAACC,MAAAA,aAAa,EAAE,IAAhB;AAAsBC,MAAAA,KAAK,EAAC;AAA5B,KAF8B;;AAAA,SAQvCC,aARuC,GAQtBC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAvB;AACA,UAAIC,GAAG,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BN,GAA5B,EAAgCG,GAAhC;AACA,WAAKT,MAAL,CAAYM,GAAZ,IAAmBG,GAAnB;AACH,KAdsC;;AAAA,SAgBvCI,aAhBuC,GAgBvB,MAAOT,KAAP,IAAiB;AAC7BA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKL,MAAL,CAAYC,aAAZ,IAA6B,KAAKD,MAAL,CAAYC,aAAZ,IAA6B,IAA7D,EAAkE;AAC9Da,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,OAFD,MAEK;AACD,YAAIC,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,IAA4B,EAA7B,GAAoCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,EAAX,IAA4B,EAA7E;AACA,aAAKf,MAAL,CAAYE,KAAZ,GAAoBa,MAApB;AACA,aAAKG,KAAL,CAAWtB,WAAX,CAAuB,KAAKI,MAAL,CAAYC,aAAnC,EAAiD,KAAKiB,KAAL,CAAWC,QAA5D,EAAqEJ,MAArE,EAA4E,KAAKG,KAAL,CAAWE,KAAvF;AACH;AAEJ,KA1BsC;AAAA;;AAIvCC,EAAAA,iBAAiB,GAAE;AACf,SAAKH,KAAL,CAAWrB,gBAAX;AACH;;AAsBDyB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAM,MAAA,QAAQ,EAAE,KAAKT,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA6B,MAAA,QAAQ,EAAE,KAAKV,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGQ,KAAKe,KAAL,CAAWK,YAAX,IAA2B,IAA3B,IAAmC,KAAKL,KAAL,CAAWK,YAAX,CAAwBC,GAAxB,CAA6BC,EAAD,IAAQ;AACnE,0BAAO;AAAQ,QAAA,GAAG,EAAEA,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,EAAlB,CAAP;AACH,KAFkC,CAH3C,CADJ,eAQa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARb,eASI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATJ,CADG,EAYD,KAAKP,KAAL,CAAWQ,YAAX,IAA2B,EAA3B,GAAgC,KAAKR,KAAL,CAAWQ,YAA3C,GAA0D,EAZzD,gCAawB,KAAKR,KAAL,CAAWhB,KAbnC,CAAP;AAeH;;AA5CsC;;AA+C3C,MAAMyB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,QAAQ,EAAGS,KAAK,CAACC,IAAN,CAAWV,QADnB;AAEHC,IAAAA,KAAK,EAAGQ,KAAK,CAACC,IAAN,CAAWT,KAFhB;AAGHG,IAAAA,YAAY,EAAGK,KAAK,CAACL,YAHlB;AAIHrB,IAAAA,KAAK,EAAG0B,KAAK,CAAC1B,KAJX;AAKHwB,IAAAA,YAAY,EAAGE,KAAK,CAACF;AALlB,GAAP;AAOH,CARD;;AAUA,eAAe/B,OAAO,CAACgC,eAAD,EAAiB;AAAC/B,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAjB,CAAP,CAAwDC,aAAxD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { updateScore, loadLeaderboards} from '../actions/useraction'\n\nclass GameConatiner extends React.Component{\n\n    player = {leaderboardId :\"NA\", score:\"\"}\n\n    componentDidMount(){\n        this.props.loadLeaderboards();\n    }\n    \n    changeHandler = (event) => {\n        event.preventDefault()\n        let key = event.target.name\n        let val = event.target.value\n        console.log(\"changeHandler\",key,val)\n        this.player[key] = val\n    }\n\n    submitHandler = async (event) => {\n        event.preventDefault()\n        if(this.player.leaderboardId && this.player.leaderboardId == \"NA\"){\n            alert(\"Select Leaderboard\")\n        }else{\n            let random = (Math.round(Math.random()) * 10) + (Math.round(Math.random()) * 20)\n            this.player.score = random;\n            this.props.updateScore(this.player.leaderboardId,this.props.username,random,this.props.token)\n        }\n        \n    }\n\n    render(){\n        return <div>\n            <form onSubmit={this.submitHandler}>\n                <select name=\"leaderboardId\" onChange={this.changeHandler}>\n                    <option value=\"NA\">--Select--</option>\n                    {\n                        this.props.leaderboards != null && this.props.leaderboards.map((lb) => {\n                            return <option key={lb}>{lb}</option>\n                        })\n                    }\n                </select><br></br>\n                <button type=\"submit\">Press to update score</button>\n            </form>\n            { this.props.errorMessage != \"\" ? this.props.errorMessage : \"\"}\n            Your current game score : {this.props.score}\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username : state.user.username,\n        token : state.user.token,\n        leaderboards : state.leaderboards,\n        score : state.score,\n        errorMessage : state.errorMessage\n    }\n}\n\nexport default connect(mapStateToProps,{updateScore,loadLeaderboards})(GameConatiner)"]},"metadata":{},"sourceType":"module"}