{"ast":null,"code":"var _jsxFileName = \"/Users/nithin.reddy/Documents/GitHub/react-game/src/components/main.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Home from './home';\nimport Index from './index';\nimport Modal from './modal';\n\nclass MainComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: {},\n      othersMessage: []\n    };\n\n    this.sendMessage = () => {\n      this.ws.send(JSON.stringify(this.state.mes));\n    };\n\n    this.onChangeHandler = event => {\n      console.log(event.target.value);\n      const mes = {\n        sender: this.props.match.params.from,\n        recipient: this.props.match.params.to,\n        content: event.target.value\n      };\n      this.setState({\n        message: mes,\n        othersMessage: [...this.state.othersMessage, mes]\n      });\n    };\n\n    this.renderComponent = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        onChange: this.onChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.sendMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"Send Message\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, this.state.othersMessage.map(mes => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }\n        }, mes.sender, \" : \", mes.content, \" \");\n      }))));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params) {\n      console.log(this.props.match.params);\n      this.ws = new WebSocket('ws://localhost:8081/chat/' + this.props.match.params.from);\n      this.ws.addEventListener(\"message\", mes => {\n        console.log(\"res\", mes);\n        this.setState({\n          messages: [...this.state.othersMessage, JSON.parse(mes.data)]\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, this.renderComponent());\n  }\n\n}\n\nconst mapStateFromProps = state => {\n  return {\n    username: state.user.username\n  };\n};\n\nexport default connect(mapStateFromProps)(MainComponent);","map":{"version":3,"sources":["/Users/nithin.reddy/Documents/GitHub/react-game/src/components/main.js"],"names":["React","connect","Home","Index","Modal","MainComponent","Component","state","message","othersMessage","sendMessage","ws","send","JSON","stringify","mes","onChangeHandler","event","console","log","target","value","sender","props","match","params","from","recipient","to","content","setState","renderComponent","map","componentDidMount","WebSocket","addEventListener","messages","parse","data","render","mapStateFromProps","username","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport Home from './home'\nimport Index from './index'\nimport Modal from './modal'\n\nclass MainComponent extends React.Component{\n\n    state = {\n        message : {},\n        othersMessage : []\n    }\n\n    componentDidMount(){\n\n        \n\n        if(this.props.match.params){\n            console.log(this.props.match.params)\n            this.ws = new WebSocket('ws://localhost:8081/chat/'+this.props.match.params.from);\n\n        this.ws.addEventListener(\"message\",(mes)=>{\n            console.log(\"res\",mes)\n            \n            this.setState({\n                messages : [...this.state.othersMessage, JSON.parse(mes.data)]\n            })\n        })\n        }\n    }\n\n    sendMessage = () =>{\n        this.ws.send(JSON.stringify(this.state.mes));\n    }\n\n    onChangeHandler = (event) => {\n        console.log(event.target.value)\n        const mes = {\n            sender : this.props.match.params.from,\n            recipient : this.props.match.params.to,\n            content : event.target.value\n        }\n        this.setState({\n            message : mes,\n            othersMessage : [...this.state.othersMessage, mes]\n        })\n    }\n\n    renderComponent = () => {\n        return <div>\n            <input type=\"text\" name=\"message\" onChange={this.onChangeHandler}/>\n            <button onClick={this.sendMessage}>Send Message</button>\n\n            <div>\n                <ul>\n                {this.state.othersMessage.map((mes)=>{\n                    return<span>{mes.sender} : {mes.content} </span>\n                })}\n                </ul>\n            </div>\n            </div>\n    }\n\n    render(){\n        return (\n            <div>\n                {/* <Modal /> */}\n                {this.renderComponent()}\n            </div>\n        )\n    }\n}\n\nconst mapStateFromProps = (state) => {\n    return {\n        username : state.user.username\n    }\n}\n\nexport default connect(mapStateFromProps)(MainComponent)"]},"metadata":{},"sourceType":"module"}